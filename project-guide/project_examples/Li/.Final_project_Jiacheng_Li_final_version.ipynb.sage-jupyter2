{"backend_state":"running","connection_file":"/projects/b12be803-54b2-4428-a68d-f6b6341b4786/.local/share/jupyter/runtime/kernel-ee958545-a465-43fe-8da8-3cdaf37cfbea.json","kernel":"python3-ubuntu","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"interpreter":{"hash":"9ec93b0f91a52b17860126035fd0fe6f838541963af8bd7d1baca447731ef625"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1662063908879,"exec_count":4,"id":"7df68c","input":"\"\"\"\nAuthor: Jiacheng Li\nCreated on Dec 1\nUpdate: Dec 22 23:18 PM\n\"\"\"\n\nimport numpy as np\nimport pandas as pd\nimport scipy as sp\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nimport datetime as dt\n%matplotlib inline\nfrom matplotlib.dates import DayLocator, MonthLocator, DateFormatter\nfrom dateutil.relativedelta import relativedelta\nimport statsmodels.api as sm\nfrom statsmodels.regression.rolling import RollingOLS\nimport seaborn as sns\n\nimport requests\nimport json","kernel":"python3-ubuntu","pos":3,"start":1662063906594,"state":"done","type":"cell"}
{"cell_type":"code","end":1662063911537,"exec_count":5,"id":"b96daf","input":"# BLS-CPI data info\nseries_ids_cpi = ['CUSR0000SA0', 'CUSR0000SA0L1E', 'SUUR0000SA0', 'SUUR0000SA0L1E']\nstart_year_cpi = [1947, 1957, 1999, 1999]","kernel":"python3-ubuntu","pos":5,"start":1662063911525,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":10,"id":"b9de1f","input":"def BLS_series_unpack(response):\n    \"\"\"\n    Input: response of a particular series\n    Return: a dataframe that contains that series\n    \"\"\"\n    series_info = response[0]['Results'][\"series\"][0]\n\n    # unpack\n    series_id = series_info['seriesID']\n    series_title = series_info['catalog']['series_title']\n    survey = series_info['catalog']['survey_abbreviation']\n\n    data = pd.DataFrame({})\n    for sub_response in response:\n        new_data = pd.DataFrame(sub_response['Results'][\"series\"][0][\"data\"]).assign(series_id=series_id, series_title=series_title, survey=survey)\n        data = data.append(new_data)\n    \n    return data\n\ndef BEA_series_unpack(response, index):\n    \"\"\"\n    Get main data for PCE series from API response\n    \"\"\"\n    return pd.DataFrame(response[index]['BEAAPI']['Results']['Data'])","pos":14,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":11,"id":"708aa9","input":"# unpack BLS data\nBLS_data = []\nfor response in (responses_cpi + responses_em):\n    BLS_data.append(BLS_series_unpack(response))\n\n# unpack BEA data\nBEA_data = []\nfor i in [0,1]:\n    BEA_data.append(BEA_series_unpack(responses_BEA, i))","pos":15,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":12,"id":"255e5c","input":"raw_data = {'BLS': BLS_data, 'BEA': BEA_data}\n\nquarterly_data = pd.DataFrame({})\nmonthly_data = pd.DataFrame({})\n\n# restructure BLS data\nBLS_series_names = {\n    'CUSR0000SA0': 'CPI',           'CUSR0000SA0L1E': 'core_CPI', \n    'SUUR0000SA0': 'CPI_chained',   'SUUR0000SA0L1E': 'core_CPI_chained',\n    'LNS14000000': 'unemp_rate',    'LNS14000001': 'unemp_rate_M',      'LNS14000002': 'unemp_rate_F', \n    'LNS14000000Q': 'unemp_rate_Q', 'LNS14000001Q': 'unemp_rate_M_Q',   'LNS14000002Q': 'unemp_rate_F_Q', \n    'LNS11300000': 'LFP_rate',      'LNS11300001': 'LFP_rate_M',        'LNS11300002': 'LFP_rate_F',\n    'LNS11300000Q': 'LFP_rate_Q',   'LNS11300001Q': 'LFP_rate_M_Q',     'LNS11300002Q': 'LFP_rate_F_Q'\n    }\ncol_list = ['year', 'period', 'value']\n\n\nfor series in BLS_data:\n    s_id = series['series_id'].iloc[0]\n    new_series = series[col_list].assign(series_name = BLS_series_names[s_id])\n    if 'Q' in s_id:\n        quarterly_data = quarterly_data.append(new_series)\n    else:\n        monthly_data = monthly_data.append(new_series)\n\n# to datetime\nqs = quarterly_data['year'] + '-' + quarterly_data['period'].str.replace('0', '')\nquarterly_data['date'] = pd.PeriodIndex(qs, freq='Q').to_timestamp()\nquarterly_data = quarterly_data.drop(columns=['year', 'period'])\n\nmonthly_data['date'] = pd.to_datetime(monthly_data.year + monthly_data.period.str.replace('M', '-'))\nmonthly_data = monthly_data.drop(columns=['year', 'period'])\n\n\n# restructure BEA data\ncol_rename = {'DataValue': 'value'}\n\n# PCE and core PCE\npce = BEA_data[0].loc[BEA_data[0].LineNumber.isin(['1', '6']), ['LineNumber', 'TimePeriod', 'DataValue']]\npce.loc[pce.LineNumber == '1', 'series_name'] = 'PCE'\npce.loc[pce.LineNumber == '6', 'series_name'] = 'core_PCE'\npce['date'] = pd.to_datetime(pce.TimePeriod.str.replace('M', '-'))\npce = pce.drop(['TimePeriod', 'LineNumber'], axis=1).rename(columns=col_rename)\n\n# GDP deflator\ngdp_deflator = BEA_data[1].loc[BEA_data[1].LineNumber == '1', ['TimePeriod', 'DataValue']].assign(series_name = 'GDP_deflator_Q')\ngdp_deflator['date'] = pd.PeriodIndex(gdp_deflator['TimePeriod'], freq='Q').to_timestamp()\ngdp_deflator = gdp_deflator.drop(['TimePeriod'], axis=1).rename(columns=col_rename)\n\nquarterly_data = quarterly_data.append(gdp_deflator)\nmonthly_data = monthly_data.append(pce)\n\n# save data\nquarterly_data.to_csv(\"quarterly_data.csv\")\nmonthly_data.to_csv(\"monthly_data.csv\")","pos":17,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":13,"id":"2eb2db","input":"quarterly_data = pd.read_csv('quarterly_data.csv')\nmonthly_data = pd.read_csv('monthly_data.csv')\n\n# convert to numeric values\nquarterly_data['value'] = quarterly_data['value'].apply(pd.to_numeric)\nmonthly_data['value'] = monthly_data['value'].apply(pd.to_numeric)\n\n# make pivot tables\nmonthly_data = monthly_data.pivot_table(\n            index=\"date\",\n            columns=\"series_name\",\n            values=\"value\")\n            \nquarterly_data = quarterly_data.pivot_table(\n            index=\"date\",\n            columns=\"series_name\",\n            values=\"value\")\n\nmonthly_data.index = pd.to_datetime(monthly_data.index)\nquarterly_data.index = pd.to_datetime(quarterly_data.index)\n\nprice_indexes = ['CPI', 'core_CPI', 'CPI_chained', 'core_CPI_chained', 'PCE', 'core_PCE']\n\n# monthly inflation\nprice_data = monthly_data.loc[:,price_indexes]\nmonthly_data[\n    [item + '_inflation' for item in price_indexes]\n    ] = (price_data - price_data.shift(12)) / price_data.shift(12) * 100 \n\n# quarterly inflation\nprice_data_Q_avg = price_data.groupby(pd.PeriodIndex(price_data.index, freq='Q'), axis=0).agg(['mean'])\nprice_data_Q_avg.index = price_data_Q_avg.index.to_timestamp()\nquarterly_data[\n    [item + '_Q_inflation' for item in price_indexes]\n    ] = (price_data_Q_avg - price_data_Q_avg.shift(4)) / price_data_Q_avg.shift(4) * 100\nquarterly_data\n\nquarterly_data['GDP_deflator_Q_inflation'] = (\n    quarterly_data['GDP_deflator_Q'] - quarterly_data['GDP_deflator_Q'].shift(4)\n    ) / quarterly_data['GDP_deflator_Q'].shift(4) * 100\n\n# natural rate of unemployment and unemployment gap\nquarterly_data['natural_unemp_Q'] = CBO_df\nquarterly_data['unemp_gap_Q'] = quarterly_data['unemp_rate_Q'] - quarterly_data['natural_unemp_Q']","output":{"0":{"ename":"NameError","evalue":"name 'CBO_df' is not defined","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-13-6e7ffea1fe6d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     41\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     42\u001b[0m \u001b[0;31m# natural rate of unemployment and unemployment gap\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 43\u001b[0;31m \u001b[0mquarterly_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'natural_unemp_Q'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mCBO_df\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     44\u001b[0m \u001b[0mquarterly_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'unemp_gap_Q'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mquarterly_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'unemp_rate_Q'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mquarterly_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'natural_unemp_Q'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'CBO_df' is not defined"]}},"pos":19,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":6,"id":"2fd074","input":"# BLS-Employment data info\nseries_ids_em = ['LNS14000000', 'LNS11300000']\n\n# to append male-only series and quarterly series\nseries_ids_em = (series_ids_em + [id[:-1] + '1' for id in series_ids_em] + [id[:-1] + '2' for id in series_ids_em])\nseries_ids_em = (series_ids_em + [id + 'Q' for id in series_ids_em])\nstart_year_em = 1948\n","pos":7,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":7,"id":"72255f","input":"def access_BLS_API(start_y, end_y, seriesid): \n    \"\"\"\n    The function accesses a given series for specified year range.\n\n    Return: a list that contains all the requested data responses segmented by year range of max 20 years.\n    \"\"\"\n\n    # API info\n    BLS_key = 'f7d7ed06654947d9a8e1bc84d3924dd0'       # '434f1b9e009a45eda7457208cb4eed23'\n    BLS_headers = {'Content-type': 'application/json'}\n    data = dict(seriesid = [seriesid], startyear= '', endyear = '', catalog = True, registrationkey = BLS_key)\n    responses = []\n\n    # access by 20 years that's the maximum range allowed by BLS API\n    for i in range(start_y, end_y, 19):\n        if i >= 2021 - 19:\n            start_year, end_year = (i, 2021)\n        else:\n            start_year, end_year = (i, i+19)\n        data['startyear'] = start_year\n        data['endyear'] = end_year\n\n        new_response = requests.post('https://api.bls.gov/publicAPI/v2/timeseries/data/', data=json.dumps(data), headers=BLS_headers).json()\n        responses.append(new_response)\n    return responses\n\n# access cpi data\nresponses_cpi = []\nfor series_id, start_year in zip(series_ids_cpi, start_year_cpi):\n    response = access_BLS_API(start_year, 2021, series_id)\n    responses_cpi.append(response)\n\n# access employment data\nresponses_em = []\nfor series_id in series_ids_em:\n    response = access_BLS_API(start_year_em, 2021, series_id)\n    responses_em.append(response)","pos":8,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":8,"id":"47fe8d","input":"# API parameters\nBEA_key = '6824CA68-3933-423E-B1A8-FF86B4E45DB6'\nget_param = 'GetData'\ndataset_name = 'NIPA'\ntable_names = ['T20804', 'T10109']\nfreq, year = ['M', 'Q'], 'ALL'\nformat = 'JSON'\n\nresponses_BEA = []\nfor i in [0,1]:\n    url = ('https://apps.bea.gov/api/data/?' +\n        '&UserID={}&method={}&DataSetName={}&Tablename={}&Frequency={}&Year={}&ResultFormat={}'\n        .format(BEA_key, get_param, dataset_name,table_names[i],freq[i],year,format)\n    )\n    responses_BEA.append(requests.get(url).json())","pos":10,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":9,"id":"b13748","input":"CBO_meta_df = pd.read_csv('Quarterly_Feb21.csv').set_index('date')\nCBO_meta_df.index = pd.to_datetime(CBO_meta_df.index)\nCBO_df = CBO_meta_df.loc[(CBO_meta_df.index <= '2020-12-31'), 'natural_unemployment_rate']","pos":12,"state":"done","type":"cell"}
{"cell_type":"code","id":"106106","input":"# perform rolling regression\nCPI_sample1, unemp1 = get_sample(UK_monthly_data, 'CPI_inflation', 'unemp_male', \"1988-12-31\", \"2021-5-01\")\nCPI_sample2, unemp2 = get_sample(UK_quarterly_data, 'CPI_inflation', 'unemp_male', \"1988-12-31\", \"2021-5-01\")\n\nres1 = RollingOLS(unemp1, sm.tools.add_constant(CPI_sample1), window=60)\nres2 = RollingOLS(unemp2, sm.tools.add_constant(CPI_sample2), window=16)\nresult1 = res1.fit()\nresult2 = res2.fit()\n\n# unpack confidence interval\nalpha = .05\nconf_int1 = result1.conf_int(alpha=alpha)['CPI_inflation']\nconf_int2 = result2.conf_int(alpha=alpha)['CPI_inflation']\n\nfig, ax = plt.subplots(2,1, figsize=(12,8), dpi=300)\nfig.tight_layout(h_pad=6, rect=[0, 0, 1, 0.96])\nax[0].plot(result1.params['CPI_inflation'], color=colors[1])\nax[0].fill_between(result1.params.index, conf_int1['lower'], conf_int1['upper'], alpha=0.2, color=colors[1], edgecolor=None)\nax[0].axhline(y=0, color='tab:red', ls='--', lw=1, alpha=0.8)\nax[0].xaxis.set_major_locator(mdates.YearLocator(2))\nax[0].xaxis.set_major_formatter(mdates.DateFormatter('%b-%Y'))\nax[0].tick_params(axis=\"x\", labelrotation= 50)\nax[0].set_title('Slopes of Male Unemployment Rate on CPI Inflation in the U.K. over 5-year Rolling Windows (monthly data)', size='large')\nax[0].set_ylabel('coefficient on male unemployment', size='medium')\nax[0].spines['top'].set_visible(False)\nax[0].spines['right'].set_visible(False)\nax[0].grid(axis='y', alpha=0.4)\nax[0].set_xlim(pd.to_datetime('1994-01-01'),pd.to_datetime('2021-01-01') )\n\nax[1].plot(result2.params['CPI_inflation'], color='#296073')\nax[1].fill_between(result2.params.index, conf_int2['lower'], conf_int2['upper'], alpha=0.2, color='#296073', edgecolor=None)\nax[1].axhline(y=0, color='tab:red', ls='--', lw=1, alpha=0.8)\nax[1].xaxis.set_major_locator(mdates.YearLocator(2))\nax[1].xaxis.set_major_formatter(mdates.DateFormatter('%b-%Y'))\nax[1].tick_params(axis=\"x\", labelrotation= 50)\nax[1].set_title('Slopes of Male Unemployment Rate on CPI Inflation in the U.K. over 5-year Rolling Windows (quarterly data)', size='large')\nax[1].set_ylabel('coefficient on male unemployment', size='medium')\nax[1].spines['top'].set_visible(False)\nax[1].spines['right'].set_visible(False)\nax[1].grid(axis='y', alpha=0.4)\nax[1].set_xlim(pd.to_datetime('1994-01-01'),pd.to_datetime('2021-01-01') )\nplt.show()","output":{"0":{"data":{"image/png":"d59a74bad9eeffa9304c89181e81f9b816f4eb2b","text/plain":"<Figure size 3600x2400 with 2 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"}},"pos":58,"state":"done","type":"cell"}
{"cell_type":"code","id":"1406ae","input":"# perform rolling regression in the opposite direction\nres3 = RollingOLS(quarterly_data['unemp_rate_M_Q'], sm.tools.add_constant(quarterly_data['CPI_Q_inflation']), window=20)\n\nCPI_sample, unemp_gap = get_sample(quarterly_data, 'CPI_Q_inflation', 'unemp_gap_Q', \"1970-12-31\", \"2021-12-01\")\nres4 = RollingOLS(unemp_gap, sm.tools.add_constant(CPI_sample - CPI_sample.shift(4)), window=20)\nresult3 = res3.fit()\nresult4 = res4.fit()\n\n# unpack confidence interval\nalpha = .05\nconf_int1 = result3.conf_int(alpha=alpha)['CPI_Q_inflation']\nconf_int2 = result4.conf_int(alpha=alpha)['CPI_Q_inflation']\n\nfig, ax = plt.subplots(2,1, figsize=(12,8), dpi=300)\nfig.tight_layout(h_pad=6, rect=[0, 0, 1, 0.96])\nax[0].plot(result3.params['CPI_Q_inflation'], color=colors[1])\n#ax[0].plot(result1.conf_int(alpha=alpha)['unemp_rate_M'])\nax[0].fill_between(result3.params.index, conf_int1['lower'], conf_int1['upper'], alpha=0.2, color=colors[1], edgecolor=None)\nax[0].axhline(y=0, color='tab:red', ls='--', lw=1, alpha=0.8)\nax[0].xaxis.set_major_locator(mdates.YearLocator(4))\nax[0].xaxis.set_major_formatter(mdates.DateFormatter('%b-%Y'))\nax[0].tick_params(axis=\"x\", labelrotation= 50)\nax[0].set_title('Slopes of Male Unemployment Rate on Inflation in the U.S. over 5-year Rolling Windows (quarterly data)', size='large')\nax[0].set_ylabel('coefficient on male unemployment', size='medium')\nax[0].spines['top'].set_visible(False)\nax[0].spines['right'].set_visible(False)\nax[0].grid(axis='y', alpha=0.4)\nax[0].set_xlim(pd.to_datetime('1950-01-01'),pd.to_datetime('2021-01-01') )\nshade_recessions(ax[0])\n\nax[1].plot(result4.params['CPI_Q_inflation'], color='#296073')\nax[1].fill_between(result4.params.index, conf_int2['lower'], conf_int2['upper'], alpha=0.2, color='#296073', edgecolor=None)\nax[1].axhline(y=0, color='tab:red', ls='--', lw=1, alpha=0.8)\nax[1].xaxis.set_major_locator(mdates.YearLocator(2))\nax[1].xaxis.set_major_formatter(mdates.DateFormatter('%b-%Y'))\nax[1].tick_params(axis=\"x\", labelrotation= 50)\nax[1].set_title('Slopes of Unemployment Gap on 4-Quarter Inflation Change in the U.S. over 5-year Rolling Windows (quarterly data)', size='large')\nax[1].set_ylabel('coefficient on unemployment gap', size='medium')\nax[1].spines['top'].set_visible(False)\nax[1].spines['right'].set_visible(False)\nax[1].grid(axis='y', alpha=0.4)\nax[1].set_xlim(pd.to_datetime('1980-01-01'),pd.to_datetime('2021-01-01') )\nshade_recessions(ax[1])\nplt.show()","output":{"0":{"data":{"image/png":"dd8f9dfc747ecf09e048e6bb4c3dfe40772bcc57","text/plain":"<Figure size 3600x2400 with 2 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"}},"pos":48,"state":"done","type":"cell"}
{"cell_type":"code","id":"2f5d8c","input":"rol_windows = create_windows(\"1948-12-31\", \"2019-12-01\", cumulative=0, freq=15)\n\nfig, ax = plt.subplots(1,2, figsize=(12,5), dpi=300)\ncolors2 = ['#57a7cc', '#063970', '#e28743', '#954B00', '#004F6E']\nfor i, win in enumerate(rol_windows):\n    infl, unemp = get_sample(monthly_data, 'CPI_inflation', 'unemp_rate_M', win[0], win[1])    \n    res, _ = Phillips_OLS(infl, unemp, xy=1)\n    coef = res.fit().params\n    # opposite\n    res2, _ = Phillips_OLS(infl, unemp, xy=0)\n    coef2 = res2.fit().params\n\n    ax[0].scatter(unemp, infl, s=10, c=colors2[i], alpha=0.3, marker='o')\n    # reg line\n    x = np.linspace(min(unemp) * 0.8, max(unemp) * 1.1, 500)                 # unemp\n    y = coef[0] + coef[1] * x                                                 # infl\n    ax[0].plot(x,y, c=colors2[i], label=str(win[0].year+1) + '-' + str(win[1].year+1))\n\n    # opposite reg line\n    y = np.linspace(-3, max(infl) * 1.1, 500)                 # unemp\n    x = coef2[0] + coef2[1] * y                                                # infl\n    ax[0].plot(x,y, c=colors2[i], alpha=0.2)\n\n    ax[0].spines['top'].set_visible(False)\n    ax[0].spines['right'].set_visible(False)\n    ax[0].grid(alpha=0.2)\nax[0].legend(framealpha=0.3)\nax[0].set_xlabel('Male Unemployment Rate')\nax[0].set_ylabel('CPI Inflation Rate')\nax[0].set_title(\"U.S. Inflation and Male Unemployment:\\n 15-year Windows (1949-2020)\")\n\nrol_windows = create_windows(\"1979-12-31\", \"2019-12-01\", cumulative=0, freq=8)\n\nfor i, win in enumerate(rol_windows):\n    infl, unemp_gap = get_sample(quarterly_data, 'CPI_Q_inflation', 'unemp_gap_Q', win[0], win[1]) \n    infl_change = infl - infl.shift(4) \n    res = sm.OLS(endog=infl_change, exog=sm.tools.add_constant(unemp_gap), missing='drop')\n    coef = res.fit().params\n    ax[1].scatter(unemp_gap, infl_change, s=10, c=colors2[i], alpha=0.3, marker='o')\n    # reg line\n    x = np.linspace(min(unemp_gap) * 1.2, max(unemp_gap) * 0.8, 500)                 # unemp\n    y = coef[0] + coef[1] * x                                              \n    ax[1].plot(x,y, c=colors2[i], label=str(win[0].year+1) + '-' + str(win[1].year+1))\n    ax[1].spines['top'].set_visible(False)\n    ax[1].spines['right'].set_visible(False)\n    ax[1].grid(alpha=0.2)\nax[1].set_xlabel('Total Unemployment Gap (quarterly)')\nax[1].set_ylabel('Change in CPI Inflation (quarterly)')\nax[1].set_title(\"U.S. 4-quarter Inflation Change and Unemployment Gap:\\n 8-year Windows (1980-2020)\")\nax[1].legend(framealpha=0.5, loc='upper right')\nplt.show()\n","output":{"0":{"data":{"image/png":"f754b7d35cbbd73a7638e3208b3dd5f577ca5230","text/plain":"<Figure size 3600x1500 with 2 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"}},"pos":43,"state":"done","type":"cell"}
{"cell_type":"code","id":"499b6c","input":"# inflation and unemployment gap\nfig, ax = plt.subplots(figsize=(13, 6))\n\nax.margins(x=0.01)\nax.plot(quarterly_data['CPI_Q_inflation'] - quarterly_data['CPI_Q_inflation'].shift(4), color = colors[0], lw=1.5)\nax.plot(quarterly_data['PCE_Q_inflation'] - quarterly_data['PCE_Q_inflation'].shift(4), color = colors[1], lw=1.5)\nax.plot(quarterly_data['unemp_gap_Q'], color = colors[2], lw=1.2, ls='--')\nshade_recessions(ax)\n\nax.axhline(y=0, color='tab:gray', linestyle='--', lw=1)\nax.legend(['growth in CPI inflation', 'growth in PCE inflation', 'unemployment gap'], \n    loc='upper right', frameon=True, framealpha=0.9, fontsize='medium')\n\nax.set_title('U.S. Four-quarter Change in Inflation Rate and Unemployment Gap', size='large')\nax.set_ylabel('Inflation change/Unemployment gap', size='large')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\nax.grid(axis='y', alpha=0.4)\n\nax.xaxis.set_major_locator(mdates.YearLocator(4))\nax.xaxis.set_major_formatter(mdates.DateFormatter('%b-%Y'))\nax.tick_params(axis=\"x\", labelrotation= 50)\n\nplt.show()","output":{"0":{"data":{"image/png":"d93177949df34a51f736f130d53c393679f7f330","text/plain":"<Figure size 2600x1200 with 1 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"}},"pos":27,"state":"done","type":"cell"}
{"cell_type":"code","id":"5e4cd9","input":"# rolling window plot\ninflations = ['CPI_inflation', 'CPIH_inflation', 'RPI_inflation']\ntitle = \"U.K. Inflation and Male Unemployment: 5-year Windows (1972-2021)\"\nlegend = ['CPI inflation', 'CPIH inflation', 'RPI inflation']\nplot_rol_windows(rol_windows, UK_quarterly_data, inflations, 'unemp_male', title, legend, xy=1,xlim=[0,15], ylim=[-2,30], figsize=[12,10])\nplot_rol_windows(rol_windows, UK_quarterly_data, inflations, 'unemp_male', title, legend, xy='both',xlim=[0,15], ylim=[-2,30], figsize=[12,10])","output":{"0":{"data":{"image/png":"c9017d55eee7fdb22d75d35498ad49fcd81e6bf3","text/plain":"<Figure size 2400x2000 with 10 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"},"1":{"data":{"image/png":"f44038afbd860085c421b84bc3e4386e192ed542","text/plain":"<Figure size 2400x2000 with 10 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"}},"pos":56,"state":"done","type":"cell"}
{"cell_type":"code","id":"790280","input":"plt.rcParams['figure.dpi'] = 200\nplt.rcParams['savefig.dpi'] = 200\ncolors = ['#57a7cc', '#063970', '#e28743', '#D22B2B', '#C34A36']\nplt.style.use('seaborn-bright')\n\ndef shade_recessions(ax):\n    recessions = pd.DataFrame({\n        'start': ['1948-11-01', '1953-07-01', '1957-08-01', '1960-04-01', '1969-12-01', '1973-11-01', '1980-01-01', \n        '1981-07-01', '1990-07-01', '2001-03-01', '2007-12-01', '2020-02-01'],\n        'end': ['1949-10-01', '1954-05-01', '1958-04-01', '1961-02-01', '1970-11-01', '1975-03-01', '1980-07-01', \n        '1982-11-01', '1991-03-01', '2001-11-01', '2009-06-01', '2020-04-01']\n    })\n    for col in recessions.columns:\n        recessions[col] = pd.to_datetime(recessions[col])\n    for id, row in recessions.iterrows():\n        ax.axvspan(row['start'], row['end'], color='#333333', alpha=.12, ec=None, label =  \"_\" * id + \"interval\")\n\n# inflation\nCPI_cols = ['core_CPI_inflation', 'CPI_inflation']\nPCE_cols = ['core_PCE_inflation', 'PCE_inflation']\nalpha = [1, 0.25]\n\nfig, ax = plt.subplots(figsize=(13, 6))\n\nax.margins(x=0.01)\nax.plot(quarterly_data['GDP_deflator_Q_inflation'], color = colors[0], lw=1.5)\nfor col, al in zip(CPI_cols, alpha):\n    ax.plot(monthly_data[col], color = colors[1], alpha=al, lw=1.5)\nfor col, al in zip(PCE_cols, alpha):\n    ax.plot(monthly_data[col], color = colors[2], alpha=al, lw=1.5)\nshade_recessions(ax)\n\nax.axhline(y=0, color='tab:gray', linestyle='--', lw=1)\nax.axhline(y=2, color=colors[3], linestyle='--', lw=1, alpha=0.7)\nax.text(dt.date(1973, 10, 1), 2.2, \"Fed's 2% target rate\", color=colors[3])\nax.legend(['implicit GDP deflator', 'core CPI inflation', 'CPI inflation', 'core PCE inflation', 'PCE inflation'], \n    loc='upper right', frameon=True, framealpha=0.9, fontsize='medium')\n\nax.set_title('United States Monthly Inflation Rate since 1947', size='large')\n#ax.set_xlabel('Date', size='large')\nax.set_ylabel('Inflation (percent)', size='large')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\nax.grid(axis='y', alpha=0.4)\nax.xaxis.set_major_locator(mdates.YearLocator(4))\nax.xaxis.set_major_formatter(mdates.DateFormatter('%b-%Y'))\nax.tick_params(axis=\"x\", labelrotation= 50)\n\nplt.show()","output":{"0":{"data":{"image/png":"4e844ef587967f124995a1043ef77d1a328506ab","text/plain":"<Figure size 2600x1200 with 1 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"}},"pos":21,"state":"done","type":"cell"}
{"cell_type":"code","id":"7935de","input":"def sim_Randomwalk(init, std, T):\n   \"\"\"\n   create a random walk with given initial point and std of the shocks\n   \"\"\"\n   y = init\n   y_hist = [y]\n   for t in range(T):\n      y = y + np.random.normal(loc=0, scale=std)\n      y_hist.append(y)\n   return y_hist\n\n# parameters and sample\ncoefs = result1.params['unemp_rate_M_Q']\ncoefs = coefs[coefs.first_valid_index():]\ninit = coefs[0]\nT = coefs.size - 1\n\n# plot\nfig, ax = plt.subplots(1,1, figsize=(6,4))\nnum = 7\nfor i in range(num):\n    sample = pd.DataFrame(sim_Randomwalk(init, np.std(coefs), T), index=coefs.index)\n    ax.plot(sample, color=(0.8, 0.8, 0.8), alpha=0.7)\nax.set_ylabel('Slopes/coefficients')\nax.grid(axis='y', alpha=0.4)\nax.plot(coefs, color = '#BD1E24')\nax.text(1990, 1, \"Drifting Coefficients\", alpha=0.7)\nax.spines[\"right\"].set_visible(False)\nax.spines[\"top\"].set_visible(False)\nplt.show()","output":{"0":{"data":{"image/png":"3851469cb98bd6d28cd4dc59466506fe7123bef2","text/plain":"<Figure size 1200x800 with 1 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"}},"pos":50,"state":"done","type":"cell"}
{"cell_type":"code","id":"814d6e","input":"# perform rolling regression\nCPI_sample1, unemp1 = get_sample(UK_monthly_data, 'CPI_inflation', 'unemp_male', \"1988-12-31\", \"2021-5-01\")\nCPI_sample2, unemp2 = get_sample(UK_quarterly_data, 'CPI_inflation', 'unemp_male', \"1988-12-31\", \"2021-5-01\")\n\nres1 = RollingOLS(CPI_sample1, sm.tools.add_constant(unemp1), window=60)\nres2 = RollingOLS(CPI_sample2, sm.tools.add_constant(unemp2), window=16)\nresult1 = res1.fit()\nresult2 = res2.fit()\n\n# unpack confidence interval\nalpha = .05\nconf_int1 = result1.conf_int(alpha=alpha)['unemp_male']\nconf_int2 = result2.conf_int(alpha=alpha)['unemp_male']\n\nfig, ax = plt.subplots(2,1, figsize=(12,8), dpi=300)\nfig.tight_layout(h_pad=6, rect=[0, 0, 1, 0.96])\nax[0].plot(result1.params['unemp_male'], color=colors[1])\nax[0].fill_between(result1.params.index, conf_int1['lower'], conf_int1['upper'], alpha=0.2, color=colors[1], edgecolor=None)\nax[0].axhline(y=0, color='tab:red', ls='--', lw=1, alpha=0.8)\nax[0].xaxis.set_major_locator(mdates.YearLocator(2))\nax[0].xaxis.set_major_formatter(mdates.DateFormatter('%b-%Y'))\nax[0].tick_params(axis=\"x\", labelrotation= 50)\nax[0].set_title('Slopes of CPI Inflation on Male Unemployment Rate in the U.K. over 5-year Rolling Windows (monthly data)', size='large')\nax[0].set_ylabel('coefficient on male unemployment', size='medium')\nax[0].spines['top'].set_visible(False)\nax[0].spines['right'].set_visible(False)\nax[0].grid(axis='y', alpha=0.4)\nax[0].set_xlim(pd.to_datetime('1994-01-01'),pd.to_datetime('2021-01-01') )\n\nax[1].plot(result2.params['unemp_male'], color='#296073')\nax[1].fill_between(result2.params.index, conf_int2['lower'], conf_int2['upper'], alpha=0.2, color='#296073', edgecolor=None)\nax[1].axhline(y=0, color='tab:red', ls='--', lw=1, alpha=0.8)\nax[1].xaxis.set_major_locator(mdates.YearLocator(2))\nax[1].xaxis.set_major_formatter(mdates.DateFormatter('%b-%Y'))\nax[1].tick_params(axis=\"x\", labelrotation= 50)\nax[1].set_title('Slopes of CPI Inflation on Male Unemployment Rate in the U.K. over 5-year Rolling Windows (quarterly data)', size='large')\nax[1].set_ylabel('coefficient on male unemployment', size='medium')\nax[1].spines['top'].set_visible(False)\nax[1].spines['right'].set_visible(False)\nax[1].grid(axis='y', alpha=0.4)\nax[1].set_xlim(pd.to_datetime('1994-01-01'),pd.to_datetime('2021-01-01') )\nplt.show()","output":{"0":{"data":{"image/png":"4caa61434d1db8b4738ee3a2a97bc344a46fdd0c","text/plain":"<Figure size 3600x2400 with 2 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"}},"pos":57,"state":"done","type":"cell"}
{"cell_type":"code","id":"84cc66","input":"UK_list = ['CPI_inflation_UK', 'CPIH_inflation_UK', 'RPI_inflation_UK', 'unemp_UK', 'unemp_male_UK']\nUK_data = pd.DataFrame({})\n\n# merge and parse\nfor idx, item in enumerate(UK_list):\n    if idx == 0:\n        UK_data = UK_data.join(pd.read_csv(item + '.csv').drop(index=list(range(7))), how='outer')\n    else:\n        UK_data = UK_data.merge(pd.read_csv(item + '.csv').drop(index=list(range(7))), how='outer')\nUK_data = UK_data.set_index('Title')\n\n# rename\nold_names = list(UK_data.columns)\nnew_names = [item.replace('_UK', '') for item in UK_list]\nname_dict = dict(zip(old_names, new_names))\nUK_data = UK_data.rename(columns=name_dict)\n\n# get monthly and quarterly data\nUK_monthly_data = UK_data[UK_data.index.str.len() == 8]\nUK_quarterly_data = UK_data[UK_data.index.str.contains('Q')]\nUK_monthly_data.index = pd.to_datetime(UK_monthly_data.index)\nUK_quarterly_data.index = pd.to_datetime(UK_quarterly_data.index.str.replace(' ',''))\n\nUK_monthly_data.index.names = ['date']\nUK_quarterly_data.index.names = ['date']\nUK_monthly_data = UK_monthly_data.sort_index().apply(pd.to_numeric)\nUK_quarterly_data = UK_quarterly_data.sort_index().apply(pd.to_numeric)","pos":53,"state":"done","type":"cell"}
{"cell_type":"code","id":"a3f2da","input":"# plot cumulative windows\ncum_windows = create_windows(\"1948-12-31\", \"2021-11-01\", cumulative=1, freq=5)\nrol_windows = create_windows(\"1948-12-31\", \"2021-11-01\", cumulative=0, freq=5)\n\ntitle = \"U.S. CPI Inflation and Male Unemployment: Cumulative Windows (1949-2021)\"\ninflation, unemployment = 'CPI_Q_inflation', 'unemp_rate_M_Q'\n\n# two directions\nplot_cum_windows(cum_windows, quarterly_data, inflation, unemployment ,title, xy=1)\nplot_cum_windows(cum_windows, quarterly_data, inflation, unemployment ,title, xy='both')","output":{"0":{"data":{"image/png":"f13608ca3e2241a9e2f26dd8d53d3be85a5216a7","text/plain":"<Figure size 2400x2400 with 15 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"},"1":{"data":{"image/png":"1cca287cd3922a6f31eee797a91af419d9979a0f","text/plain":"<Figure size 2400x2400 with 15 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"}},"pos":37,"state":"done","type":"cell"}
{"cell_type":"code","id":"b6a033","input":"def get_sample(DF: pd.DataFrame, series_1: str, series_2: str, begin_date: str, end_date: str):\n    \"\"\"\n    Input: \n        DF:                                 the Dataframe where series to be extrated from,\n        names of series 1, 2, 3:            series to be retrieved\n    Return: \n        series 1, 2, 3\n    \"\"\"\n    begin_date, end_date = pd.to_datetime(begin_date), pd.to_datetime(end_date)\n    sample = DF.loc[(DF.index > begin_date) & (DF.index <= end_date)]\n\n    return sample[series_1], sample[series_2]\n\ndef Phillips_OLS(infl, unemp, xy=1):\n    \"\"\"\n    Input: \n        infl, unemp:    series to conduct regression from\n        xy:         if xy = 1, regress infl on unemp; else, regress unemp on infl\n    Return: \n        OLS regression results as a statsmodel object\n    \"\"\"\n    if xy==1:\n        indep, dep = unemp, infl\n    else:\n        indep, dep = infl, unemp\n    # OLS\n    n = indep.size\n    A2 = np.array(indep).reshape(n,1)\n    b = np.array(dep)\n    A = np.hstack((np.ones([n,1]), A2))\n    res = sm.OLS(endog=b, exog=A, missing='drop')\n    corr = np.corrcoef(indep, dep)[0,1]\n    return res, corr\n","pos":33,"state":"done","type":"cell"}
{"cell_type":"code","id":"bed024","input":"UK_monthly_data = UK_monthly_data.loc[UK_monthly_data.index >= '1968-1-1']\nUK_quarterly_data = UK_quarterly_data.loc[UK_quarterly_data.index >= '1968-1-1']\n\n# inflation and unemployment\nfig, ax = plt.subplots(figsize=(13, 6))\n\nax.margins(x=0.01)\nax.plot(UK_monthly_data['RPI_inflation'], color = colors[1], lw=1.5)\nax.plot(UK_monthly_data['CPI_inflation'], color = colors[0], lw=1.5)\nax.plot(UK_monthly_data['CPIH_inflation'], color = colors[2], lw=1.5)\nax.plot(UK_monthly_data['unemp'], color = colors[3], alpha=0.95, lw=1.2,  ls='--')\n\nax.axhline(y=0, color='tab:gray', linestyle='--', lw=1)\nax.legend(['RPI inflation', 'CPI inflation', 'PCE inflation', 'unemployment rate'], \n    loc='upper right', frameon=True, framealpha=0.9, fontsize='medium')\n\nax.set_title('U.K. Inflation Rate and Unemployment rate since 1968', size='large')\nax.set_ylabel('Inflation/Unemployment Rate', size='large')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\nax.grid(axis='y', alpha=0.4)\n\nax.xaxis.set_major_locator(mdates.YearLocator(4))\nax.xaxis.set_major_formatter(mdates.DateFormatter('%b-%Y'))\nax.tick_params(axis=\"x\", labelrotation= 50)\n\nplt.show()","output":{"0":{"data":{"image/png":"0ccc83649b5de74a7a2e51c6d449dcf9392f3fa1","text/plain":"<Figure size 2600x1200 with 1 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"}},"pos":54,"state":"done","type":"cell"}
{"cell_type":"code","id":"c18d71","input":"cum_windows = create_windows(\"1988-12-31\", \"2021-11-01\", cumulative=1, freq=5)\nrol_windows = create_windows(\"1971-12-31\", \"2021-11-01\", cumulative=0, freq=5)\n\n\n# cumulative window plot\ntitle = \"U.K. CPI Inflation and Male Unemployment: Cumulative Windows (1989-2021)\"\nplot_cum_windows(cum_windows, UK_quarterly_data, 'CPI_inflation', 'unemp_male', title, xy=1, xlim=[3,15], ylim=[-2,11], figsize=[12,8])\nplot_cum_windows(cum_windows, UK_quarterly_data, 'CPI_inflation', 'unemp_male', title, xy='both', xlim=[3,15], ylim=[-2,11], figsize=[12,8])\n","output":{"0":{"data":{"image/png":"e6f9c5f97af4d7ce0d651d671f016bc99870e5bc","text/plain":"<Figure size 2400x1600 with 7 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"},"1":{"data":{"image/png":"2667123eb286ee5d1495f2922e7fea47f23caed0","text/plain":"<Figure size 2400x1600 with 7 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"}},"pos":55,"state":"done","type":"cell"}
{"cell_type":"code","id":"c76f55","input":"# perform rolling regression\nres1 = RollingOLS(quarterly_data['CPI_Q_inflation'], sm.tools.add_constant(quarterly_data['unemp_rate_M_Q']), window=20)\n\nCPI_sample, unemp_gap = get_sample(quarterly_data, 'CPI_Q_inflation', 'unemp_gap_Q', \"1970-12-31\", \"2021-12-01\")\nres2 = RollingOLS(CPI_sample - CPI_sample.shift(4), sm.tools.add_constant(unemp_gap), window=20)\nresult1 = res1.fit()\nresult2 = res2.fit()\n\n# unpack confidence interval\nalpha = .05\nconf_int1 = result1.conf_int(alpha=alpha)['unemp_rate_M_Q']\nconf_int2 = result2.conf_int(alpha=alpha)['unemp_gap_Q']\n\nfig, ax = plt.subplots(2,1, figsize=(12,8), dpi=300)\nfig.tight_layout(h_pad=6, rect=[0, 0, 1, 0.96])\nax[0].plot(result1.params['unemp_rate_M_Q'], color=colors[1])\n#ax[0].plot(result1.conf_int(alpha=alpha)['unemp_rate_M'])\nax[0].fill_between(result1.params.index, conf_int1['lower'], conf_int1['upper'], alpha=0.2, color=colors[1], edgecolor=None)\nax[0].axhline(y=0, color='tab:red', ls='--', lw=1, alpha=0.8)\nax[0].xaxis.set_major_locator(mdates.YearLocator(4))\nax[0].xaxis.set_major_formatter(mdates.DateFormatter('%b-%Y'))\nax[0].tick_params(axis=\"x\", labelrotation= 50)\nax[0].set_title('Slopes of Inflation on Male Unemployment Rate in the U.S. over 5-year Rolling Windows (quarterly data)', size='large')\nax[0].set_ylabel('coefficient on male unemployment', size='medium')\nax[0].spines['top'].set_visible(False)\nax[0].spines['right'].set_visible(False)\nax[0].grid(axis='y', alpha=0.4)\nax[0].set_xlim(pd.to_datetime('1950-01-01'),pd.to_datetime('2021-01-01') )\nshade_recessions(ax[0])\n\nax[1].plot(result2.params['unemp_gap_Q'], color='#296073')\nax[1].fill_between(result2.params.index, conf_int2['lower'], conf_int2['upper'], alpha=0.2, color='#296073', edgecolor=None)\nax[1].axhline(y=0, color='tab:red', ls='--', lw=1, alpha=0.8)\nax[1].xaxis.set_major_locator(mdates.YearLocator(2))\nax[1].xaxis.set_major_formatter(mdates.DateFormatter('%b-%Y'))\nax[1].tick_params(axis=\"x\", labelrotation= 50)\nax[1].set_title('Slopes of 4-Quarter Inflation Change on Unemployment Gap in the U.S. over 5-year Rolling Windows (quarterly data)', size='large')\nax[1].set_ylabel('coefficient on unemployment gap', size='medium')\nax[1].spines['top'].set_visible(False)\nax[1].spines['right'].set_visible(False)\nax[1].grid(axis='y', alpha=0.4)\nax[1].set_xlim(pd.to_datetime('1980-01-01'),pd.to_datetime('2021-01-01') )\nshade_recessions(ax[1])\nplt.show()","output":{"0":{"data":{"image/png":"f43c7857d1aba81dc12efeff6b979359de736476","text/plain":"<Figure size 3600x2400 with 2 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"}},"pos":46,"state":"done","type":"cell"}
{"cell_type":"code","id":"c8f29c","input":"# unemployment rate\nfig, ax = plt.subplots(2, 1, figsize=(13, 10))\nfig.tight_layout(h_pad=6)\n\nax[0].plot(monthly_data['unemp_rate'], color = colors[0], lw=1.5)\nax[0].plot(monthly_data['unemp_rate_M'], color = colors[1], lw=1.5)\nax[0].plot(monthly_data['unemp_rate_F'], color = colors[2], lw=1.5)\nax[0].plot(quarterly_data['natural_unemp_Q'], color = colors[4], lw=1.5, alpha=0.6, ls='--')\nax[0].set_title('United States Unemployment Rate since 1948', size='large')\n#ax[0].set_xlabel('Date', size='large')\nax[0].set_ylabel('Unemployment (percent)', size='large')\nax[0].legend(['unemployment rate', 'unemployment rate - male only', 'unemployment rate - female only', 'natural unemployment rate'],\n    loc='upper left', frameon=True, framealpha=0.9, fontsize='medium')\nax[0].spines['top'].set_visible(False)\nax[0].spines['right'].set_visible(False)\nax[0].grid(axis='y', alpha=0.4)\n\n# LFP\nax[1].plot(monthly_data['LFP_rate'], color = colors[0], lw=1.5)\nax[1].plot(monthly_data['LFP_rate_M'], color = colors[1], lw=1.5)\nax[1].plot(monthly_data['LFP_rate_F'], color = colors[2], lw=1.5)\nax[1].set_title('United States Labor Force Participation Rate since 1948', size='large')\n#ax[1].set_xlabel('Date', size='large')\nax[1].set_ylabel('Labor Force Participation (percent)', size='large')\nax[1].legend(['labor force participation rate', 'LFP - male only', 'LFP - female only'],\n    loc='upper left', frameon=True, framealpha=0.9, fontsize='medium')\nax[1].spines['top'].set_visible(False)\nax[1].spines['right'].set_visible(False)\nax[1].grid(axis='y', alpha=0.4)\n\nfor i in [0,1]:\n    ax[i].margins(x=0.01)\n    ax[i].xaxis.set_major_locator(mdates.YearLocator(4))\n    ax[i].xaxis.set_major_formatter(mdates.DateFormatter('%b-%Y'))\n    ax[i].tick_params(axis=\"x\", labelrotation= 50)\n    shade_recessions(ax[i])\n\nplt.show()","output":{"0":{"data":{"image/png":"bccb1935e318c73260426a243b0911d214a51f03","text/plain":"<Figure size 2600x2000 with 2 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"}},"pos":22,"state":"done","type":"cell"}
{"cell_type":"code","id":"cd1717","input":"def create_windows(begin_date:str, end_date: str, cumulative: int, freq: int):\n    \"\"\"\n    create year windows\n    Return: a list of tuples that contain start_date and end_date\n    \"\"\"\n    date_range = pd.date_range(begin_date, end_date, freq=\"Y\")[::freq]\n    windows = []\n    for i in date_range:\n        if i.year >= 2021-freq+1:\n            end = pd.to_datetime(end_date)\n        else: \n            end = i + relativedelta(years=freq)\n        if cumulative == 1:\n            windows.append((date_range[0], end))\n        else:\n            windows.append((i, end))\n    return windows\n\ndef plot_cum_windows(windows, data, inflation, unemployment ,title, xy=1, xlim=[0,16], ylim=[-4,16], figsize=[12,12]):\n    \"\"\"\n    regress inflation on unemployment if xy = 1, else, unemployment on inflation\n    \"\"\"\n    # cumulative window plot\n    rows, last_row = divmod(len(windows), 3)\n    if last_row == 0:\n        fig, ax = plt.subplots(rows, 3, figsize=figsize)\n    else: \n        fig, ax = plt.subplots(rows+1, 3, figsize=figsize)\n    \n    plt.style.use('seaborn-bright')  # ggplot\n    fig.tight_layout(h_pad=1, rect=[0, 0, 1, 0.96])\n    fig.suptitle(title, fontsize=16)\n\n    if xy == 'both':\n        xys = [0,1]\n    else: xys = [xy]\n\n    for i, win in enumerate(windows):\n        col, row = divmod(i, 3)\n\n        for xy in xys:\n            infl, unemp = get_sample(data, inflation, unemployment, win[0], win[1])    \n            res, corr = Phillips_OLS(infl, unemp, xy)\n            coef = res.fit().params\n            ax[col, row].scatter(unemp, infl, s=3, c=colors[0])\n            ax[col, row].text(10, 10, 'corr = ' + str(round(corr, 3)), size='medium')\n        \n            # reg line\n            if xy==1:\n                x = np.linspace(0, 20, 500)                 # unemp\n                y = coef[0] + coef[1] * x                                                 # infl\n            else: \n                y = np.linspace(-5, 30, 500)                 # unemp\n                x = coef[0] + coef[1] * y                                                 # infl\n            ax[col, row].plot(x,y, c=colors[3])\n        \n        ax[col, row].set_ylabel(str(win[0].year + 1) + ' - ' + str(win[1].year))\n        ax[col, row].spines['top'].set_visible(False)\n        ax[col, row].spines['right'].set_visible(False)\n        ax[col, row].set_xlabel('Unemployment')\n        ax[col, row].grid(alpha=0.2)\n        \n        ax[col, row].set_ylim(ylim)\n        ax[col, row].set_xlim(xlim)\n\n    if last_row != 0:\n        fig.delaxes(ax[rows][2-last_row])     # 3 - modulo - 1\n        fig.delaxes(ax[rows][3-last_row])     # 3 - modulo -2\n    plt.show()\n\n\ndef plot_rol_windows(windows, data, inflations, unemployment ,title, legend, xy=1, xlim=[0,16], ylim=[-4,16], figsize=[12,12]):\n    \"\"\"\n    regress inflation on unemployment if xy = 1, else, unemployment on inflation\n    \"\"\"\n\n    alphas = [1, 1,1]\n    colors2 = ['#063970', '#57a7cc', '#e28743', '#954B00', '#004F6E']\n\n    rows, last_row = divmod(len(windows), 3)\n    if last_row == 0:\n        fig, ax = plt.subplots(rows, 3, figsize=figsize)\n    else: \n        fig, ax = plt.subplots(rows+1, 3, figsize=figsize)\n    \n    fig.tight_layout(h_pad=1, rect=[0, 0, 1, 0.96])\n    fig.suptitle(title, fontsize=16)\n\n    # plot both lines\n    if xy == 'both':\n        xys = [0,1]\n    else: xys = [xy]\n\n    for i, win in enumerate(windows):\n        col, row = divmod(i, 3)\n\n        for xy_i in xys:\n            # if both, change the alphas for the second set of regression lines\n            if (xy == 'both') & (xy_i == 1):\n                alphas2 = [item - 0.7 for item in alphas]\n            else: \n                alphas2 = alphas\n\n            for j, infl in enumerate(inflations):\n                infl, unemp = get_sample(data, infl, unemployment, win[0], win[1])\n                if not infl.isna().values.any():                # check availability\n                    res, corr = Phillips_OLS(infl, unemp, xy_i)\n                    coef = res.fit().params\n                    ax[col, row].scatter(unemp, infl, s=3, c=colors2[j], alpha=alphas2[j])\n                    if j ==0:\n                        ax[col, row].set_xlabel('corr = ' + str(round(corr, 3)) + ' (CPI)', size='medium')\n\n                    # reg line\n                    if xy_i==1:\n                        x = np.linspace(0, 20, 500)                 # unemp\n                        y = coef[0] + coef[1] * x                                                 # infl\n                    else: \n                        y = np.linspace(-5, 30, 500)                 # unemp\n                        x = coef[0] + coef[1] * y                                                 # infl\n                    ax[col, row].plot(x,y, c=colors2[j], alpha=alphas2[j])\n\n                if (col,row) == (4,2):\n                    ax[col, row].legend(legend, framealpha=0.5)\n\n        ax[col, row].set_ylim(ylim)\n        ax[col, row].set_xlim(xlim)\n        ax[col, row].set_ylabel(str(win[0].year + 1) + ' - ' + str(win[1].year))\n        ax[col, row].spines['top'].set_visible(False)\n        ax[col, row].spines['right'].set_visible(False)\n        ax[col, row].grid(alpha=0.2)\n            \n    if last_row != 0:\n        fig.delaxes(ax[rows][2-last_row])     # 3 - modulo - 1\n        fig.delaxes(ax[rows][3-last_row])     # 3 - modulo -2\n    plt.show()","pos":35,"state":"done","type":"cell"}
{"cell_type":"code","id":"de5a6e","input":"# parameters\ntheta = 2\nUn = .06\nx0 = 0.02\nT = 30\n\n# optimal policy response\ng_x = lambda x: (theta)/(theta**2+1) * Un + (theta**2)/(theta**2+1) * x\n\n# simulation\nx_hist = [x0]\ny_hist = []\nfor t in range(T):\n    x = x_hist[t]\n    y = g_x(x) + np.random.normal(0,0.01)\n    y_hist.append(y)\n    x_hist.append(y)\n\nfig, ax = plt.subplots(1,1, figsize=(8,5))\nax.plot(x_hist, color='tab:blue')\nax.set_title('Simulation of Post-War Inflation Acceleration in Kydland-Prescott Framework', size='large')\nax.set_ylabel('Inflation rate', size='large')\nax.set_xlabel('Periods', size='large')\nax.grid(axis='y', alpha=0.7)\n\nplt.show()","output":{"0":{"data":{"image/png":"054b33c2d79016a765dfab7bda1c19ee921127fc","text/plain":"<Figure size 1600x1000 with 1 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"}},"pos":30,"state":"done","type":"cell"}
{"cell_type":"code","id":"ed1d9d","input":"# plot rolling windows\ninflations = ['CPI_Q_inflation', 'PCE_Q_inflation', 'GDP_deflator_Q_inflation']\nunemployment = 'unemp_rate_M_Q'\n\ntitle = \"U.S. Inflation and Male Unemployment: 5-year Windows (1949-2021)\"\nlegend = ['CPI inflation', 'PCE inflation', 'GDP deflator']\n\n# both directions\nplot_rol_windows(rol_windows, quarterly_data, inflations, unemployment ,title, legend, xy=1)\nplot_rol_windows(rol_windows, quarterly_data, inflations, unemployment ,title, legend, xy='both')","output":{"0":{"data":{"image/png":"3be69537feb60fa1f882a9f9489cc31893f3933c","text/plain":"<Figure size 2400x2400 with 15 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"},"1":{"data":{"image/png":"2e32f2254b00a7410b466bb893fe05c9fad73f03","text/plain":"<Figure size 2400x2400 with 15 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"}},"pos":40,"state":"done","type":"cell"}
{"cell_type":"code","id":"f9c0e6","input":"# inflation and unemployment\nfig, ax = plt.subplots(figsize=(13, 6))\n\nax.margins(x=0.01)\nax.plot(monthly_data['CPI_inflation'], color = colors[0], lw=1.5)\nax.plot(monthly_data['PCE_inflation'], color = colors[1], lw=1.5)\nax.plot(monthly_data['unemp_rate'], color = colors[2], alpha=0.95, lw=1.2,  ls='--')\nax.plot(quarterly_data['natural_unemp_Q'], color = colors[2], lw=1.2, alpha=0.6, ls='--')\nshade_recessions(ax)\n\nax.axhline(y=0, color='tab:gray', linestyle='--', lw=1)\nax.legend(['CPI inflation', 'PCE inflation', 'unemployment rate', 'natural unemployment rate'], \n    loc='upper right', frameon=True, framealpha=0.9, fontsize='medium')\n\nax.set_title('U.S. Inflation Rate and Unemployment rate since 1948', size='large')\n#ax.set_xlabel('Date', size='large')\nax.set_ylabel('Inflation/Unemployment Rate', size='large')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\nax.grid(axis='y', alpha=0.4)\n\nax.axhline(y=2, color=colors[3], linestyle='--', lw=1, alpha=0.7, xmin=0.8)\nax.text(dt.date(2012, 1, 1), 2.3, \"Fed's 2% target rate\", color=colors[3])\n\nax.xaxis.set_major_locator(mdates.YearLocator(4))\nax.xaxis.set_major_formatter(mdates.DateFormatter('%b-%Y'))\nax.tick_params(axis=\"x\", labelrotation= 50)\n\nplt.show()","output":{"0":{"data":{"image/png":"578587c2507f12f3976093bb4a9795d53437a7c5","text/plain":"<Figure size 2600x1200 with 1 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"}},"pos":24,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"06f6d1","input":"Indeed, we can see very clearly that initially there exists a short-run trade-off (negative relationship) between inflation and unemployment under both directions of fit, but as the window increments with more data, the Phillips Curve dies down and eventually disappears. The correlation coefficient between the two variables is growing smaller as a general pattern. Friedman's prediction is indeed true.","pos":38,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"0a1c51","input":"As we can clearly observe from the above regression plots, there is in general a negative Phillips relationship in the short-run, but from time to time it could even transits into a significantly positive one. This empirical observation echoes Milton Friedman’s 1976 Nobel lecture, in which he proposed a possibly positive Phillips relationship and postulated that the positive slope between inflation and unemployment over long periods may occur as a transitional phenomenon that will disappear as economic agents adjust not only their expectations but their institutional and political arrangements.","pos":41,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"0d76e7","input":"From the above presentation of inflation and unemployment series, we can see that there seems to be an inverse relationship between unemployment and inflation, as higher inflation seems often associated with lower unemployment. This relationship especially holds true in the immediate post-WWII era as taught by Sameulson and Solow. \n\nIn December 1967, Milton Friedman delivered his Presidential address to the American Economic Association. In that address, Friedman warned that an inverse relationship between inflation and unemployment was at best \"temporary\" and therefore could not be exploited permanently. Instead, he posited that there was a natural rate of unemployment, which was later developed by Phelps and others, and that higher inflation could induce at most a \"short-run\" decrease in unemployment that would evaporate in the \"long run\".\n\nAs we can see from the above graph, Milton Friedman was prophetically right. In the early 70s, there was a huge acceleration in both inflation and unemployment by all measures. Inflation was not only higher but also more volatile, and this phenomenon was persistent until the late 70s. In December 1976, Friedman delivered his Nobel prize lecture. In that lecture, he stated his guess that persistently <u>higher</u> inflation might actually lead to persistently <u>higher</u> unemployment. This implies a positive relationship between unemployment and inflation. But he noted that this is unlikely to last long, as political and institutional arrangements would either adjust or the government would adopt policies that will produce a low rate of inflation and less government intervention into the fixing of prices. Just as he has predicted, the periods of high inflation finally ended abruptly when Paul Volcker, the 12th Chairman of the Federal Reserve, led an unprecedentedly determined stance to cure inflation. And at a cost of reaching a 11 percent unemployment rate during the 1982 and 1983 recession, inflation finally stablized.\n\nTo study a possibly evolving inflation-unemployment statistical relationship in light of these events and flucutations, I will more closely examine whether a negative relationship holds true and how it evolves in both directions by running regressions across different time windows below.","pos":25,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"10099d","input":"## Data Processing\nIn this section, I construct two Dataframes, with one that contains quarterly series and the other containing monthly series, so that each of the above series is easy to operate on.\n\n### Restructure data\n- Here, I keep only the level variable for each series, constructing an identifier called `series_names` that identifies each series, and put them into two dataframes depending on whether a series is monthly data or quarterly data.\n- I put time indexes to pd.datetime format for convenient time series analysis.","pos":16,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"1341d8","input":"The above graph displays a visibly seen negative relationship between inflation change (estimated unexpected inflation) and unemployment gap, as predicted by the NAIRU model. This will be tested using linear regressions in the below analysis.","pos":28,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"2a6fea","input":"### Employment data\nFor employment data, this project is (potentially) interested in the following data series:\n\n- Unemployment Rate: LNS14000000\n- Labor Force Participation Rate: LNS11300000\n\nI use the seasonally adjusted data for the two above series, and I include to the dataset the male/female-only rates to control for demographic changes since the time range of data I'm interested in starts relatively in the past. I retrieve both monthly and quarterly data.\n\n#### Availability\n- rates and levels: 1948 - 2021","pos":6,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"373fef","input":"I put some further manipulation of data:\n- converting string values to numeric;\n- make pivot tables for easier manipulation;\n- calculate year-end monthly inflation rates, i.e., the <u>12-month change in price indexes</u> for each of the price index;\n- calculate year-end quarterly inflation rates by first averaging price indexes over quarters and year-end changes;\n- add CBO natural rate of unemployment data to the quarterly pivot table;\n- store datasets.","pos":18,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"3767c0","input":"\nThe first figure below plots the regression of US CPI inflation on male unemployment over cumulative 5-year windows; the second figure plots the regression in the reversed direction.","pos":36,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"431bd1","input":"# Final Project - The Rise and Fall of U.S. Inflation and Unemployment\n<u>Author: Jiacheng Li \\\nDate: Dec. 22, 2021 \\\nClass:  ECON-GA 4002/4003 </u>\n\nI sincerely thank Professor Tom Sargent for giving suggestions on the plan of this project and for providing really helpful feedback and guiding me to related sources. I also greatly thank Dr. Coleman and Dr. Lyon for their very helpful and inspiring suggestions, and for the all the useful knowledge and skills I have learned in both courses. This project has been a truly rewarding learning experience for me.","pos":0,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"5134fa","input":"## References\nCogley, Timothy, and Thomas J. Sargent. “The Conquest of US Inflation: Learning and Robustness to Model Uncertainty.” Review of Economic Dynamics 8, no. 2 (April 2005): 528–63. https://doi.org/10.1016/j.red.2005.02.001.\n\nMilton Friedman – Prize Lecture. NobelPrize.org. Nobel Prize Outreach AB 2021. Thu. 23 Dec 2021. <https://www.nobelprize.org/prizes/economic-sciences/1976/friedman/lecture/>\n\nFriedman, Milton. “The Role of Monetary Policy.” The American Economic Review, vol. 58, no. 1, American Economic Association, 1968, pp. 1–17, http://www.jstor.org/stable/1831652.\n\nKing, Robert G., and Mark W. Watson. “The Post-War U.S. Phillips Curve: A Revisionist Econometric History.” Carnegie-Rochester Conference Series on Public Policy 41 (December 1994): 157–219. https://doi.org/10.1016/0167-2231(94)00018-2.\n\nKydland, Finn E., and Edward C. Prescott. “Rules Rather than Discretion: The Inconsistency of Optimal Plans.” Journal of Political Economy 85, no. 3 (June 1977): 473–91. https://doi.org/10.1086/260580.\n\nSargent, Thomas, Noah Williams, and Tao Zha. “Shocks and Government Beliefs: The Rise and Fall of American Inflation.” THE AMERICAN ECONOMIC REVIEW 96, no. 4 (2006): 39.\n\nSargent, Thomas J. The Conquest of American Inflation. Princeton, N.J: Princeton University Press, 1999. Print.\n","pos":60,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"576540","input":"## Data Summary\nThis section presents a preliminery summary of the acquired data series using plots. It includes\n- the evolution of inflation rates measured by alternative price indexes;\n- the evolution of LFP and unemployment with aggregate and gender-specific data;\n- US inflation in conjunction with unemployment rate.","pos":20,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"5e3ce2","input":"# Part II. Analysis\n### Mimic Acceleration of Inflation in a simple Kydland-Prescott Framework\n\nThe first step is to understand the quick acceleration of inflation in the early 1970s, as reflected in the above graph of inflation series. We have also seen a break-down of Phillips Curve. In their famous discussion of time-inconsistent government policy, Kydland and Prescott gives a one-period example of inflation-unemployment dynamics that could possibly explain the convergence of inflation to a suboptimal consistent equilibrium of higher inflation rates.\n\nConsider the one-period economy in which inflation and unemployment evolves according to the NAIRU model dynamics. Government wants to minimize both inflation and unemployment subject to the constraint imposed by the Phillips relationship, i.e., it solves the below one-period quadratic minimization problem:\n$$\n\\begin{aligned}\n\\min_{\\pi} &\t-.5\\left(U^{2}+\\pi^{2}\\right) \\\\\n\\text{s.t. }\\; &\tU=U^{*}-\\theta\\left(\\pi-\\pi^{e}\\right),\\;\\theta>0\n\\end{aligned}\n$$\nAfter substitution, this is equivalent to \n$$ \\min_{\\pi}\t-.5\\left((U^{*}-\\theta\\left(\\pi-\\pi^{e}\\right))^{2}+\\pi^{2}\\right) $$\n\nWe adopt the following timing protocal: given the public's expectation $\\pi^e$, the government follows a decision rule $g(\\pi^e)$ that solves the above quadratic problem. First-order condition yields the solution:\n\n$$\\pi = g(\\pi^e) = \\frac{\\theta}{\\theta^{2}+1}U^{*}+\\frac{\\theta^{2}}{\\theta^{2}+1}\\pi^{e}$$\n\nAdopting the basic adaptive expectation scheme by setting $\\pi^e = \\pi_{t-1}$, and adding a transitory shock $z \\sim N(0,0.01)$ to the government response, we arrive at a law of motion for inflation:\n$$\\pi_{t} = \\frac{\\theta}{\\theta^{2}+1}U^{*}+\\frac{\\theta^{2}}{\\theta^{2}+1}\\pi_{t-1} + z$$ \n\nThe shock that we add above reflects the fact that monetary authority does not have full control over the realized level of inflation. Thus, we can provide a simple calibration and simulation of this result. Let the natural rate of unemployment $U^* = 0.06$, set initial rate of inflation at the post-war level of 2%, and choose the slope parameter $\\theta = 2$. The following figure crudely mimics the post-war dynamics of acceleration in inflation rates as convergence to the Kydland-Prescott suboptimal equilibrium.","pos":29,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"5fb810","input":"One interesting observation from the above figures is that while it's obvious that LFP rate of both sexes converge over time, the unemployment gap between sexes also seem to decline over time. While it looks a natural trend that the female participation into the labor force increases over time due to the increasingly recognized important role of women in the workplace and gender equality movement, the pattern that male LFP declines and converges downward over time is an interesting one. Moreover, it appears that male unemployment rate used to be less volatile than female unemployment, while starting in the 1980s, this pattern seems to be reversed. ","pos":23,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"642490","input":"### Related Literature\nThe statistical inverse relationship between unemployment and wage inflation was first discovered by statistician A. W. Phillips Curve using the UK data in the sample period 1861–1957. In 1960, economists Paul Sammuelson and Robert Solow found the same relationship with the US data. They coined the term \"Phillips Curve\", and argued that it was possible to exploit it in government efforts to reduce unemployments at the cost of acceptable increase in inflation. However, in the late 60s and 70s, Miltron Friedman, Robert Lucas, Edmund Phelps, and others came forth with criticism of this view. They developed the theory of natural rate of unemployment and argue that the trade-off between unemployment and inflation is nothing but temporary, and the curve itself moves together with people's expectations. Ideas behind Lucas's famous Critique is deeply embeded in this view. This ground-breaking understanding later proves to be in line with the real data and is at the core of the explanations of both the rise of Great Inflation and the disinflation policy. \n\nOne possible way to explain the acceleration of inflation in the 70s is that policy-makers want to exploit the Phillips Curve. They minimize inflation and unemployment under a quadratic scheme, in which the timing protocol is adopted such that policy-makers choose an inflation rate as the best response given the private sector, and this leads to convergence to consistent suboptimal (or Nash) equilibrium, as in Kydland and Prescott (1977)'s framework. However, to explain the disinflation process that later followed, there is no universal agreement, and Sargent (1999) examines two alternative narratives, the \"the triumph of natural-rate theory \" and the \"vindication story\", in his book \"The Conquest of American Inflation\". The first theory asserts that after the \"break-downs\" of exploitable Phillips relationship, policy-makers are later informed and influenced by the adapted natural rate view and changed their actions accordingly by promoting steady low inflation as their main objective. However, this narrative lacks explanatory power as to the absence of policy response even after the natural rate theory is well taught and assigned regime shifts to somewhat arbitrary exogenous changes in beliefs and policies. Sargent (1999) comes up and puts in favor an alternative view that sees this regime shift as an adaptive learning process from the government, where policy-makers, without knowing the true data-generating process, adhere to Samuelson-Solow's teaching based on traditional \"perceived\" Phillips Curves from the past data. It shows that policy-makers' position to pursue low inflation rate could emerge from this learning process.\n\nThis narrative is later re-examined in Cogley and Sargent (2005) and Sargent, Williams and Zha (2006). The first paper assigns three alternative competing models of the Phillips curve to the central bank and test its optimal policy under uncertainty. In particular, the policy maker exercises Bayesian model averaging in evaluating and updating probabilities it assigns to each model. Since the alternative models still have small but non-zero posterior probability weights, this leads to extra caution in risk of worst-case outcomes. The second paper estimates that the Nash equilibrium and optimal Ramsey one are actually close for the US economy and the mean and escape route dynamics are insufficient in explaining it. Under this setting, the government does not believe the slope of Phillips Curve is a constant, but rather follows a vector random walk that represent shocks and lead to evolving government beliefs. And the rise and fall of inflation are due to the interactions between these shocks and beliefs. They use a Bayesian Markov Chain Monte Carlo (MCMC) algorithm for the monetary authority to evaluate the parameters of approximating nonexpectational Phillips curve.\n\n### Project Plan\nThis project mainly investigates the posited statistical inverse relationship between inflation and unemployment and briefly explore the mechanism that explains the rise and fall of US inflation outlined above. It is organized as follows:\n* First, I access alternative measures of price level and employment data for the US and construct inflation, unemployment rates, and unemployment gap that are used for further analysis. I then visualize these series and draw interesting observations and patterns over time.\n* Next, I test the extent to which the statistical Phillips relationship holds true using simple linear regressions over different time windows. In particular, I extend the study under the framework of a NAIRU model to examine Friedman's postulations.\n* Then, based on these observations, I make interpretations on how this observed Phillips relationship could explain the rise of Great Inflation in the 1970s, and how it is later tamed and stablized under Paul Volcker's historical efforts of disinflation. In making these interpretations, I adopt the two alternative narratives in Sargent (1999)'s framework, and invent simple numerical exercises to illustrate them or highlight possible methodology.\n* Finally, I make a brief extension with the same analysis on the recent UK data.","pos":2,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"692d21","input":"Next, I plot the same two regressions over 5-year rolling windows.","pos":39,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"79a0ba","input":"### BEA data\nThe data is retreived from the National Income and Products Accounts (NIPA) obtained from Bureau of Economic Analysis (BEA) database. The series of our interest is \n- Price Indexes for Personal Consumption Expenditures by Major Type of Product, Monthly (M): T20804\n- Implicit Price Deflators for Gross Domestic Product (A) (Q): T10109\n\nThe project is interested in the aggregate price levels and prices excluding food/energy i.e. core indexes.\n\n#### Availability\n- PCEPI: 1959 - 2021\n- Implicit deflator: 1947 - 2021\n\nThis data is accessed through the BEA API.","pos":9,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"7be7f5","input":"The left panel above again authenticates Friedman's story about how the Phillips curve could \"drift up\" and become positive with a longer time window. On the right panel with the simple NAIRU specification, the slopes become more negative, implying a more robust negative relationship. Moreover, we can observe that the Phillips Curve seem to \"flatten\" as time moves on, which echoes our previous observation that there has been less volatility in inflation but unemployment fluctuation remains of a similar degree as economic booms and recessions come over, indicating a smaller slope on the Phillips Curve.","pos":44,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"84e788","input":"## Extension: the same exercise with UK data\nFor UK data, I use three commonly used price indices: Consumer Price Index (CPI), Consumer Price Index with Housing (CPIH), and Retail Price Index (RPI). Because API for UK's Office for National Statistics is still in Beta mode, I access the data by directly downloading from online.\n- `CPIH ANNUAL RATE 00: ALL ITEMS 2015=100`\n-  `CPI ANNUAL RATE 00: ALL ITEMS 2015=100`\n- `RPI All Items: Percentage change over 12 months: Jan 1987=100`\n\nFor unemployment data, I accessed the overall and male-only monthly and quarterly rate as before.\n\n### Data cleaning\nThe UK data is again organized into two subsets: monthly data and quarterly data. Due to narrower range of availability on the various inflation data, I shall truncate the dataset to start from 1968. The earlist date with both unemployment and inflation data available in the officially reported ONS dataset is in 1972.","pos":52,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"8ce0bb","input":"## Introduction\n\n### Motivation\nOne big issue underpinning the current COVID-19 crisis is the rising price level and the possible “coming back” of high inflation. For the past few decades, the inflation rate in the US has been relatively stable and thus widely assumed to be \"tamed\", but it cannot be forgotten that there have been periods of inflation with very high volatility and persistence prior to the 1990s both in the United States and other advanced economies. Recently, both the Fed Chairman Jerome Powel and secretary of the Treasury Janet Yellen have made the comment to \"retire\" the word \"transitory\" to describe the current situation of inflation. In this context, it is both timely and useful to reflect upon the rise and fall of inflation in that not distant history, understand its dynamics and connections to historical events and policy interventions, and draw observations and possibly lessons from there. ","pos":1,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"a71edd","input":"It seems the inverse relationship between unemployment and inflation is less obvious for the U.K. data from this crude analysis, but it could also be due to greater limitations on U.K. data availability.","pos":59,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"aef3eb","input":"### Explanations of Disinflation Mechanism\n\nOur primary purpose is to examine how the short-run and long-run Phillips curve hold over time using linear regressions with both directions of fit. Another way to understand the above results, however, is to see them as the government or monetary authority's estimation process of the statistical unemployment-inflation relationship, from where they solve the \"Phelps Problem\" and set optimal inflation rate. \n\nIn that model, the public forms expectations not following a simple one-period adaptive scheme but by geometrically summing over inflation lags, and the government solves a discounted infinite horizon quadratic control problem. Sargent 1999 proposes that under a <u>constant gain assumption</u> in the learning mechanism and assuming the true data-generating process follows the natural rate framework, solving the Phelps problem can lead the governments to uncover the \"natural rate theory\" in the sense that it leads them to pursue lower inflation target without explicitly knowing the data-generating process. He simulated and estimated under both the Classical and Keynesian identification schemes - the latter delivers better fit in the data.","pos":51,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"b00f34","input":"### CBO Data\nFinally, I accessed a measure of <u> natural rate of unemployment </u> from the Congress Budget Office with quarterly data available from 1948 to 2020. Since they do not provide API access, I download the .cvs file and import it from the directory.","pos":11,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"b2ac62","input":"## Data Unpacking\nThe returned BLS responses have the following structure:\n\n- `responses_data[i]` contains all responses for one series\n- `responses_data[i][j]` contains every year range of the series\n- `responses_data[i][j]` has the main data stored in `'Results'`\n- I will keep `series_id`, `series_title` and `survey_abbreviation`  in `catalog` information, and unpack `data`.\n\nThe returned BEA responses have the following structure:\n\n- `responses_PCE[1]['BEAAPI']['Results']['Data']` where we can get the main data.\n","pos":13,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"c35119","input":"### The NAIRU model\n\nNext, I examine the development of change in inflations and unemployment gap in light of a NAIRU model setting. According to a NAIRU model, the Phillips curve can be described as \n$$ \\pi_t = \\pi_t^e - \\theta (U_t - U_t^*)$$\nwhere $\\pi_t$ is the inflation rate at time $t$, $\\pi_t^e$ denotes the expectation of inflation, $U_t$ denotes the unemployment rate at time $t$, and $U_t^*$ is the natural rate of unemployment.\n\nThe spirit of a basic NAIRU model consists of the fact that firms and workers make contract on wages based on their expectation of inflation in future periods, while firms as price takers set employment level based on the realized real wages. An unexpected price inflation leads to lower real wages and firms expand employment level as a response, this leads to decreases in unemployment.\n\nAdopting a simple adaptive expectation arrangement, we can replace $\\pi_t^e$ with $\\pi_{t-1}$, that is, agents form expectation of inflation at time $t$ based on the realized inflation of the last period. Note that this specification can also be replaced by a weighted sum on lagged inflation. The rational expectation assumption imposes $\\pi_t = \\pi_t^e$, which leads to $U_t - U_t^*$. This leads to the defined natural rate of unemployment.\n\nUnder the NAIRU framework with adaptive expectations, we have:\n$$ \\pi_t - \\pi_t^e = \\pi_t - \\pi_{t-1} = \\Delta \\pi = - \\theta (U_t - U_t^*)$$\n\nThis implies a negative relationship between growth in inflation and unemployment gap. Using the estimated natural rate of unemployment reported by the US Congress Budget Office (CBO) and subtracting it from the actual unemployment rate, we have the following series of unemployment gap.","pos":26,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"cf1930","input":"Next, I select wider rolling windows to perform regression on, and report outcomes in the same plot to draw comparisons. I regress inflation rate on male unemployment over 15-year windows from 1949 to 2020 (I excluded 2021 data to avoid COVID impact). It seems fluctuations in inflation rates died down over the last few decades, while fluctuations in unemployment still as often occur (particularly following the 2008 crisis). \n\n\nIn spirit of a NAIRU model, the right panel plots 4-quarter change in U.S. inflation (to very crudely represent unexpected inflation) and unemployment gap from 1980 onward, where the unemployment gap is calculated by subtracting from the unemployment rate the natural rate of unemployment reported by Congress Budget Office (CBO). I use only 1980 onward data because the gender gap in unemployment rate appears to diminish greatly since 1980 in the U.S., making the comparison more meaningful.","pos":42,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"d8ecec","input":"### Test Against a Random Walk\n\nBoth directions of fit confirm the previous findings about the Phillips relationship and marks the success of Milton Friedman's shrewd and prescient observations and predictions. Moreover, these slopes/coefficients look quite like a random walk. To apply a simple test against a random walk, I plot multiple paths of AR(1) process with a unit root and white noise normally distributed with standard deviation equal to the std of the entire series, and plot them together as follows. \n\nSince we do not know enough of the true process, there is no easy way to perform an appropriate hypothesis testing. Still, it seems the drifting coefficients on the statistical Phillips Curve has a bit more stationarity than a random walk AR(1) process specified above, but not far from it.","pos":49,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"deb8f9","input":"# Part I. Data Report and Summary\n## Data Access\nThis project mainly relies on the US (and potentially UK) price and unemployment data. Unemployment rate and related data are given by The Current Population Survey (CPS) data obtained from the US Bureau of Labor Statistics (BLS). I examine three alternative measures of inflation:\n- Consumer Price Index (CPI), seasonally unadjusted, obtained from the US Bureau of Labor Statistics (BLS)\n- Personal Consumption Expenditures Price Index (PCEPI), obtained from Bureau of Economic Analysis (BEA)\n- Implicit GDP deflator by aggregate/types of products (BEA)\n\nI will be accessing most datasets using their APIs.\n\nOne thing to notice is that BLS only allows data range up to 20 years per access.\nAlso, since most series do not have the same beginning and ending years, I will access series one at a time.\n\n### CPI data\nFor CPI data, I will access CPI (core CPI) and Chained CPI, where the second takes into account substitution effects as result to a price change and adjust inflation downward.\n\nThis project potentially concerns the following data series:\n- CPI-U, U.S. city average, All items - CUSR0000SA0\n- CPI-U, U.S. city average, All items less food and energy - CUSR0000SA0L1E\n- Chained CPI, All items - SUUR0000SA0\n- Chained CPI, All items less food and energy - SUUR0000SA0L1E\n\n#### Availability\n- CUSR0000SA0: 1947 - 2021\n- CUSR0000SA0L1E: 1957 - 2021             \n- SUUR0000SA0: 1999 - 2021\n- SUUR0000SA0L1E: 1999 - 2021","pos":4,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"ded2e5","input":"Next, I apply the same rolling regression strategy but with reversed regression again. The first figure plots the coefficient on quarterly CPI inflation; the second figure plots the coefficient 4-quarter inflation change.","pos":47,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e5b1a7","input":"To recover the Phillips relationship, I will regress between unemployment rate and inflation for different year window arrangements. Specifically, I will arrange and report LS regressions according to:\n- a cumulative window with an increment of 5 years each time since earliest available inflation data;\n- 5-year rolling windows since earliest data till the latest date.\n\nI make the cumulative plot to validate Milton Friedman's claim that the unemployment-inflation trade-off is at best a temporary phenomenon and evaporates in the long run. I adopt the two timing window arrangements to examine the short-run and long-run patterns respectively.\n\nI set date range to (`1948-12-31`, `2021-07-01`), which include the earliest and latest inflation data in our dataset. To avoid too large volatility, I base this analysis on <u> quarterly inflation and unemployment </u> data.\n\nI first create two functions that can be called to create and plot cumulative and rolling windows given a dataset respectively.","pos":34,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e9f397","input":"### Rolling regression results\nOne downside of the above analysis is that the slopes are very sensitive to the choice of time windows. A slightly different inclusion of years may convey very different slope patterns. To make these observations more robust, I perform the same exercise as above but implement two rolling regressions, i.e., I move each 5-year window forward month by month and report the coefficients of regressions on both directions of fit.\n\n- I regress monthly CPI inflation on male unemployment rate over a 5 year (60 months) window, and roll the window forward.\n- I regress quarterly CPI inflation on unemployment gap over a 10 year (40 quarters) window, and roll the window forward, since 1980.\n\nI plot the parameter on the endogenous variable (male unemployemnt rate/unemployment gap) and also add the 0.95 confidence interval.","pos":45,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"f0dd31","input":"### Statistical Inflation-Unemployment Relationship\nNext, I would like to recover the statistical \"Phillips Curve\", or the supposedly inverse relationship between inflation and unemployment using Ordinary Least-square linear regression.\n\nI will use the `statsmodels.api` functionality to solve this program.\n\n#### Directions of fit\n\nOne potential question here is regarding the direction of regression - we could either regress unemployment on inflation or inflation on unemployment. In their investigation into the Post-War Phillips Curves, King and Watson (1994) specifies two alternative identifications - the traditional Keynesian identification, which makes the business cycle respond to demand shocks and the direction of fit should be inflation on unemployment, and the \"monetarist\" or Classical econometric model, under which unemployment moves in response to inflation so we should regress unemployment on inflation. Notice that this problem is especially important since when the government solves the quadratic minimization problem on inflation and unemployment, or the \"Phelps problem\", to determine optimal inflation, the direction of minimization depending on government beliefs really affects outcomes.\n\nSince for this crude analysis there is no full specification of a model, to explore the statistical relationship, I shall adopt regressions on both directions and thus avoid taking a stand on which is the \"independent\" variable. I will plot them on the same graph.","pos":32,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"f236c3","input":"One thing to highlight regarding this result is that once the inflation reaches the suboptimal excessive level, it enters a stationary point with random fluctuations and by itself could not explain the fall of US inflation as happened in history. The dynamic version of the above problem may face multiple equilibria. In fact, even with a learning model where government approximates the statistical Phillips curve from previous experiences, as Sargent 1999 and Sargent et al. 2006 demonstrate, as long as it were to believe that the coefficients of its Phillips curve were constant over time, the estimates would still converge to ones that support a self-confirming equilibrium.\n","pos":31,"state":"done","type":"cell"}
{"end":1662063890662,"exec_count":1,"id":"301d86","input":"1+1","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"2"},"exec_count":1}},"pos":2.5,"start":1662063890597,"state":"done","type":"cell"}
{"end":1662071755683,"exec_count":1,"id":"a1025f","input":"(2021 - 1948) * 6","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"438"},"exec_count":1}},"pos":7.5,"start":1662071755665,"state":"done","type":"cell"}
{"id":0,"time":1662071548838,"type":"user"}
{"last_load":1662062112726,"type":"file"}