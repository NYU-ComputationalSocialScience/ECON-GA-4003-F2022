{"backend_state":"ready","connection_file":"/projects/b12be803-54b2-4428-a68d-f6b6341b4786/.local/share/jupyter/runtime/kernel-7a65be48-65f8-478c-854a-f03aad1c6e06.json","kernel":"python3-ubuntu","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"interpreter":{"hash":"6a08c3768384b8697cd9043b740cfb2808226c56bc4cd84bbca045d66ac27560"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"},"orig_nbformat":4},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":1,"id":"69bb05","input":"#Import Packages and set warnings off\n\nimport pandas as pd \nimport requests\nimport numpy as np\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\n%matplotlib inline\nimport matplotlib.colors as mplc\nimport seaborn as sns\nimport statsmodels.formula.api as smf\nimport plotly.express as px\nimport plotly.graph_objects as go\n\npd.options.mode.chained_assignment = None\n\n\n#Set Default values for Graphics\n\n#Default fig size\ndef_size=(20,8)\n#Default font for Labels\ndef_font = {'family': 'serif',\n        'weight': 'bold',\n        'size':16\n        }\n#Default font for Titles\ndef_font_title = def_font.copy()\ndef_font_title['size']= 30\n\n#Default background color\nbackground= tuple(np.array([255, 240, 255]) / 255)","pos":5,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":10,"id":"cc19dc","input":"fig, ax = plt.subplots(figsize=def_size)\nplot_trends(\"Happiness\",ax)\n\n#Add customized annotations\n\ncolor_list = sns.color_palette(\"deep\") #Identify colors to match text color with the line plot color\n\nfont= def_font.copy()\nfont['family']= 'Arial'  #Use a different family for annotations\n\n#Add text for annotations\nax.text(2005.6,8,\"Denmark\",color=color_list[1],fontdict=font)\nax.text(2007.3,7.3,\"Switzerland\",color=color_list[4],fontdict=font)\nax.text(2011,7.1,\"Finland\",color=color_list[2],fontdict=font)\n\nax.text(2006.5,4.4,\"Rwanda\",color=color_list[3],fontdict=font)\nax.text(2009.5,4.9,\"Afghanistan\",color=color_list[0],fontdict=font)\nax.text(2016.8,4.45,\"Togo\",color=color_list[5],fontdict=font)\n","output":{"0":{"data":{"text/plain":"Text(2016.8, 4.45, 'Togo')"},"exec_count":10,"output_type":"execute_result"},"1":{"data":{"image/png":"99d8c46053a259b26cabbb3a0c10ba82434492ff","text/plain":"<Figure size 1440x576 with 1 Axes>"},"output_type":"display_data"}},"pos":21,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":11,"id":"cfa2f8","input":"#Lineplot for Afghanistan\n\n\ndf=master_file.loc[master_file['Country']=='Afghanistan'].loc[:,['Happiness_index', 'Year', 'Country']]\n\nfig, ax = plt.subplots(figsize=def_size)\n\nsns.lineplot(\n    x=df['Year'], \n    y=df[\"Happiness_index\"],\n    hue=df[\"Country\"],\n    palette=\"deep\", \n    dashes=False, lw=3, \n    legend=False\n    )\nax.set_ylim([2,5.5]) #Customize y-axis limits\n\n#Add verticle lines at 2010,2014 and 2016\n\nfor i in [2010,2014,2016]:\n    ax.axvline(i,color=tuple(np.array([50, 50, 50,150]) / 255),linestyle='--',\n    linewidth=1.5) \n\n#Customize Annotations\n\n\nfont_tex= def_font.copy() #Set font for annotations\nfont_tex['family']= 'Arial'\nfont_tex['size']= 13\n\n#Add text for the 2010 verticle line\ntex1= ax.text(2009, 5, \"Increase in Military Operations\", fontdict=font_tex) \ntex2= ax.text(2009.7, 4.84, \"by NATO\",fontdict=font_tex)\n\n#Add text for the 2014 verticle line\ntex3= ax.text(2013.5, 3, \"End of War on\",fontdict=font_tex) \ntex4= ax.text(2013.8, 2.84, \"Terror\",fontdict=font_tex)\n\n#Add text for the 2016 verticle line\ntex5= ax.text(2015.2, 4.45, \"Clash between Taliban and\",fontdict=font_tex) \ntex6= ax.text(2015.5, 4.3, \"Afghan Government\",fontdict=font_tex)\n\n\n#Add red background for annotations\nfor i in [tex1,tex2,tex3,tex4,tex5,tex6]:\n    i.set_bbox(dict(facecolor='red', alpha=0.3))\n\n\n#Set titles, labels and background \nax.set_title('Happiness Time Trend: Afghanistan', loc='center', fontdict=def_font_title)\nax.set_xlabel('Year', fontdict=def_font)\nax.set_ylabel('Happiness Index', fontdict=def_font)\nfig.set_facecolor(background)","output":{"0":{"data":{"image/png":"9eeb9b0ed305d6012b67dcae23d2ba208ad8760d","text/plain":"<Figure size 1440x576 with 1 Axes>"},"output_type":"display_data"}},"pos":23,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":12,"id":"75a13e","input":"fig, ax = plt.subplots(figsize=def_size)\nplot_trends(\"Peace\",ax)\n\n#Add customized annotations\n\nax.text(2017,7.2,\"Denmark\",color=color_list[1],fontdict=font)\nax.text(2012.5,7.1,\"New Zealand\",color=color_list[4],fontdict=font)\nax.text(2009.3,7.7,\"Iceland\",color=color_list[2],fontdict=font)\n\nax.text(2012.8,3.86,\"Iraq\",color=color_list[3],fontdict=font)\nax.text(2009.5,3.84,\"Afghanistan\",color=color_list[0],fontdict=font)\nax.text(2018.5,3.86,\"Somalia\",color=color_list[5],fontdict=font)\n\n","output":{"0":{"data":{"text/plain":"Text(2018.5, 3.86, 'Somalia')"},"exec_count":12,"output_type":"execute_result"},"1":{"data":{"image/png":"557f95d1419609b7d711afbb130d6ea06251964e","text/plain":"<Figure size 1440x576 with 1 Axes>"},"output_type":"display_data"}},"pos":26,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":13,"id":"baefcc","input":"fig,ax = plt.subplots(figsize=(20,10))\n\n#Make Correlation Matrix\n\n#Shorten column names for better visualization, the removed part is added as text later\ndata= master_file.rename(columns={\"Happiness_index\":\"Happiness Index\", \n    \"Healthy life expectancy at birth\":\"Healthy life expectancy\",\n    \"Freedom to make life choices\":\"Freedom to make\"}).dropna().iloc[:,np.r_[2:8, 12]].corr()\n\n#Plot heatmap\nsns.heatmap(data, annot=True, linewidths=.5, fmt= '.2f',ax=ax,annot_kws={\"fontsize\":12})\n\n#Add text for column names shortened earlier\n\nfont_corr = def_font.copy()\nfont_corr['size']=12\n\nax.text(-0.7,3.75,\"at birth\",color=(0,0,0,0.6),fontdict=font_corr)\nax.text(-0.67,4.75,\"life choices\",color=(0,0,0,0.6),fontdict=font_corr)\n\nax.text(3.4,7.4,\"at birth\",color=(0,0,0,0.6),fontdict=font_corr)\nax.text(4.3,7.4,\"life choices\",color=(0,0,0,0.6),fontdict=font_corr)\n\n#Change colorbar ticks fontsize\ncbar = ax.collections[0].colorbar\ncbar.ax.tick_params(labelsize=15)\n\n#Customize x and y ticks\nlabs= data.index.to_list()\nax.set_xticklabels(labs,rotation=0,fontdict=font_corr)\nax.set_yticklabels(labs,fontdict=font_corr)\n\n\n\nax.set_title(\"Correlation Matrix (Heat Map)\",fontdict=def_font_title)\nfig.set_facecolor(background)\nfig.tight_layout()","output":{"0":{"data":{"image/png":"2a1aeab449fe11089b522bb01d02ec05c1d22f46","text/plain":"<Figure size 1440x720 with 2 Axes>"},"output_type":"display_data"}},"pos":30,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":14,"id":"ab65e3","input":"\ndata= master_file.dropna()\n\n#Define function for regression line\ndef reg_line(data,xcol,ax):\n\n    \"\"\"\n    This function takes in data and another variable name (from Log GDP per capita,\n    Healthy life expectancy at birth,Social support or Peace_index) to draw a regression line between\n    happiness index and the specified column. The correlation between the two is displayed in the title of the plot.\n\n    Paramters\n    ---------\n    df: pd.Dataframe\n        A copy of the master_file dataset with null values dropped\n\n    index: string\n        The name of the relevant variable (Log GDP per capita/Healthy life expectancy at birth/Social \n        support/Peace_index)\n    \n    ax: axes object\n        Axes on which we will plot the regression line\n        \n    Returns\n    -------\n    ax: axes object\n        The axes object updated with the regression line and correlation value in the title\n    \"\"\"\n    assert (xcol==\"Log GDP per capita\") | (xcol==\"Healthy life expectancy at birth\") | (\n        xcol==\"Social support\") | (xcol==\"Peace_index\")\n\n    reg = smf.ols('Q(\"Happiness_index\") ~ Q(xcol)',data).fit()\n    data['yhat'] = reg.predict()\n    #plot regression line with a shade of red\n    #set alpha to a high value to accentuate the regression line\n    data.set_index(xcol)['yhat'].plot(ax=ax,color=(0.7,0,0,0.8),lw=2.4) \n    data= data.drop(columns=\"yhat\")                                    \n    cor= data[[\"Happiness_index\",xcol]].corr().iloc[0,1].round(2)\n    ax.set_title(\"Correlation: \"+str(cor),color='olivedrab',fontdict=def_font)\n    return ax\n\n\nfig, ax = plt.subplots(nrows=1,ncols=4, figsize=def_size, sharey=True)\n\ns=0\nfor i in [\"Log GDP per capita\",\"Healthy life expectancy at birth\",\"Social support\"]:\n    #plot pale blue scatter plots with alpha set to a low value\n    ax[s].scatter(x=data[i],y=data['Happiness_index'],color=(0,0.1,0.6,0.13)) \n    ax[s].set_xlabel(i,fontdict=def_font)     \n    reg_line(data,i,ax[s]) #plot regression line\n    s+=1\n\n#plot pale green scatter plot for peace. Alpha set to a low value\nax[3].scatter(x=data['Peace_index'],y=data['Happiness_index'],color=(0,0.6,0.2,0.13))\nreg_line(data,'Peace_index',ax[3])\nax[3].set_xlabel(\"Peace Index\",fontdict=def_font)\n\nax[0].set_ylabel(\"Happiness Index\",fontdict=def_font)\n\n\nfig.suptitle(\"Happiness Index Scatter Plots\",fontproperties=def_font_title)\nfig.set_facecolor(background)\nfig.tight_layout()","output":{"0":{"data":{"image/png":"d791f30de0c1ccdb160da12fb753a156344d1b6c","text/plain":"<Figure size 1440x576 with 4 Axes>"},"output_type":"display_data"}},"pos":32,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":15,"id":"c76bfe","input":"#Get relevant datasets for each map\n\n#Dataset for peace\ngeo_peace= peace_index.rename(columns={\"Peace_index\":\"Index\"}).query(\"Year<2021\")\n\n#Dataset for happiness\n\n#Cleaning for missing country codes\ngeo_hap= master_file.rename(columns={\"Happiness_index\":\"Index\"}).query(\"Year>2007\")\ncode_dict= {\"Hong Kong S.A.R. of China\":\"HKG\", \"Malta\":\"MLT\", \"Belize\":\"BLZ\",\"Comoros\":\"COM\",\t\n\"Luxembourg\":\"LUX\",\"Maldives\":\"MDV\",\"Suriname\":\"SUR\",\"Swaziland\":\"SWZ\"}\n\nfor i,j in code_dict.items():\n    geo_hap.loc[geo_hap[\"Country\"]==i,\"Code\"]= j","pos":36,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":16,"id":"00a331","input":"\ndef map(df,year:int,index:str,color_scale:str,reverse:bool):\n\n    \"\"\"\n    This function takes in an index name (Happiness or Peace), the relevant dataset,year value for\n    the year we want the world map for a color scale of our choice and we a True/False value representing \n    on wether we want a reversescale for the colorbar or not\n    \n    Paramters\n    ---------\n    df: pd.Dataframe\n        geo_peace or geo_hap\n\n    index: string\n        The name of the relevant index (Happiness/Peace )for the trend\n    \n    color_scale: string\n        Color Scale for color bar\n    \n    reverse:bool\n        True/False for reverse scale\n        \n    Returns\n    -------\n    Interactive world map (Choropleth)\n    \"\"\"\n    \n    assert type(df) == pd.core.frame.DataFrame\n    assert type(index) == str\n    assert type(color_scale) == str\n    assert type(reverse) == bool\n\n    assert (index==\"Happiness\") | (index==\"Peace\")\n\n    df= df.query(\"Year==@year\")\n    fig = go.Figure(data=go.Choropleth(\n        locations = df['Code'], #locations identified based on country code\n        z = df['Index'],        #color varies based on magnitude of index\n        text = df['Country'],   \n        colorscale = color_scale,\n        autocolorscale=False,\n        reversescale=reverse,\n        marker_line_color='black',\n        marker_line_width=1,\n        colorbar=dict(title={'text':'<b>'+index+' Index </b>','font':{'size':20,'family':'serif'}}) \n    ))\n\n    fig.update_layout(\n        title_text='<b>World Map for Global '+index+' Index ('+str(year)+\n        ')</b><br><sup>Hover over for Index values and Country names</sup>',\n        titlefont=dict(size =30, color='black', family='serif'),\n        title_x=0.5,\n        geo=dict(\n        landcolor = 'rgba(175, 165, 166,0.7)', #customize grey color with missing values\n        showcountries = True,\n        showframe=False,\n        showcoastlines=True,\n        projection_type='equirectangular',\n        bgcolor='rgb(255,240,255)' #customize background color to our default value\n        ),\n        margin=dict(l=10, r=10, t=70, b=10),\n        paper_bgcolor='rgb(255,240,255)',\n    )\n\n    fig.show() \n\ndef map_year(year=2020):\n\n    \"\"\"\n    This function just takes in a year value and the runs the function defined above for both peace and\n    happiness\n\n    Paramters\n    ---------\n    year: int\n        Year for which we want the world map\n        \n    Returns\n    -------\n    Interactive world maps for happiness and peace (Choropleth)\n    \"\"\"\n\n    assert type(year)==int\n    assert (year<2021) & (year>2007)\n    \n    map(geo_hap,year,\"Happiness\",\"fall\",False) #Fall color scale for happiness, reversescale=True\n    map(geo_peace,year,\"Peace\",\"tropic\",True) #Tropic color scale for peace, reversescale=True\n    \n\nmap_year(2020)","output":{"0":{"data":{"application/vnd.plotly.v1+json":{"config":{"plotlyServerURL":"https://plot.ly"},"data":[{"autocolorscale":false,"colorbar":{"title":{"font":{"family":"serif","size":20},"text":"<b>Happiness Index </b>"}},"colorscale":[[0,"rgb(61, 89, 65)"],[0.16666666666666666,"rgb(119, 136, 104)"],[0.3333333333333333,"rgb(181, 185, 145)"],[0.5,"rgb(246, 237, 189)"],[0.6666666666666666,"rgb(237, 187, 138)"],[0.8333333333333334,"rgb(222, 138, 90)"],[1,"rgb(202, 86, 44)"]],"locations":["ALB","ARG","AUS","AUT","BHR","BGD","BEL","BEN","BOL","BIH","BRA","BGR","KHM","CMR","CAN","CHL","CHN","COL","HRV","CYP","CZE","DNK","DOM","ECU","EGY","SLV","EST","ETH","FIN","FRA","GEO","DEU","GHA","GRC","HKG","HUN","ISL","IND","IRN","IRQ","IRL","ISR","ITA","CIV","JPN","JOR","KAZ","KEN","KSV","KGZ","LAO","LVA","LTU","MLT","MUS","MEX","MDA","MNG","MNE","MAR","MMR","NAM","NLD","NZL","NGA","MKD","NOR","PHL","POL","PRT","RUS","SAU","SRB","SVK","SVN","ZAF","KOR","ESP","SWE","CHE","TWN","TJK","TZA","THA","TUN","TUR","UGA","UKR","ARE","GBR","USA","URY","VEN","ZMB","ZWE","AFG","DZA","AGO","ARM","AZE","BLR","BTN","BWA","BFA","BDI","CAF","TCD","CRI","CUB","COD","DJI","GNQ","ERI","SWZ","GAB","GTM","GIN","GNB","GUY","HTI","HND","IDN","JAM","KWT","LBN","LSO","LBR","LBY","MDG","MWI","MYS","MLI","MRT","MOZ","NPL","NIC","NER","PRK","OMN","PAK","PSE","PAN","PNG","PRY","PER","QAT","COG","ROU","RWA","SEN","SLE","SGP","SOM","SSD","LKA","SDN","SYR","GMB","TLS","TGO","TTO","TKM","UZB","VNM","YEM"],"marker":{"line":{"color":"black","width":1}},"reversescale":false,"text":["Albania","Argentina","Australia","Austria","Bahrain","Bangladesh","Belgium","Benin","Bolivia","Bosnia and Herzegovina","Brazil","Bulgaria","Cambodia","Cameroon","Canada","Chile","China","Colombia","Croatia","Cyprus","Czech Republic","Denmark","Dominican Republic","Ecuador","Egypt","El Salvador","Estonia","Ethiopia","Finland","France","Georgia","Germany","Ghana","Greece","Hong Kong S.A.R. of China","Hungary","Iceland","India","Iran","Iraq","Ireland","Israel","Italy","Cote d' Ivoire","Japan","Jordan","Kazakhstan","Kenya","Kosovo","Kyrgyz Republic","Laos","Latvia","Lithuania","Malta","Mauritius","Mexico","Moldova","Mongolia","Montenegro","Morocco","Myanmar","Namibia","Netherlands","New Zealand","Nigeria","North Macedonia","Norway","Philippines","Poland","Portugal","Russia","Saudi Arabia","Serbia","Slovakia","Slovenia","South Africa","South Korea","Spain","Sweden","Switzerland","Taiwan","Tajikistan","Tanzania","Thailand","Tunisia","Turkey","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States of America","Uruguay","Venezuela","Zambia","Zimbabwe","Afghanistan","Algeria","Angola","Armenia","Azerbaijan","Belarus","Bhutan","Botswana","Burkina Faso","Burundi","Central African Republic","Chad","Costa Rica","Cuba","Democratic Republic of the Congo","Djibouti","Equatorial Guinea","Eritrea","Eswatini","Gabon","Guatemala","Guinea","Guinea-Bissau","Guyana","Haiti","Honduras","Indonesia","Jamaica","Kuwait","Lebanon","Lesotho","Liberia","Libya","Madagascar","Malawi","Malaysia","Mali","Mauritania","Mozambique","Nepal","Nicaragua","Niger","North Korea","Oman","Pakistan","Palestine","Panama","Papua New Guinea","Paraguay","Peru","Qatar","Republic of the Congo","Romania","Rwanda","Senegal","Sierra Leone","Singapore","Somalia","South Sudan","Sri Lanka","Sudan","Syria","The Gambia","Timor-Leste","Togo","Trinidad and Tobago","Turkmenistan","Uzbekistan","Vietnam","Yemen"],"type":"choropleth","z":[5.364909648895264,5.900567054748535,7.1373677253723145,7.213489055633545,6.173175811767578,5.27998685836792,6.838760852813721,4.407745838165283,5.559258937835693,5.5158162117004395,6.109717845916748,5.597723007202148,4.3769850730896,5.241077899932861,7.024904727935791,6.1506428718566895,5.771064758300781,5.709175109863281,6.507992267608643,6.259810447692871,6.897091388702393,7.514631271362305,5.168409824371338,5.354461669921875,4.4723968505859375,5.4619269371032715,6.452563762664795,4.549219608306885,7.889349937438965,6.714111804962158,5.123143196105957,7.3118977546691895,5.319483280181885,5.787615776062012,5.295341491699219,6.038049697875977,7.575489521026611,4.225281238555908,4.864528179168701,4.785165309906006,7.03493070602417,7.194928169250488,6.488356113433838,5.256503582000732,6.1179633140563965,4.093991756439209,6.168269157409668,4.546584129333496,6.294414043426514,6.24958610534668,5.284390926361084,6.229008674621582,6.391378879547119,6.156822681427002,6.015300273895264,5.964221000671387,5.811628818511963,6.011364936828613,5.72216272354126,4.80261754989624,4.431364059448242,4.451010227203369,7.504447937011719,7.257381916046143,5.50294828414917,5.053664207458496,7.290032386779785,5.079585075378418,6.139455318450928,5.767792224884033,5.495288848876953,6.559588432312012,6.04154634475708,6.519098281860352,6.462076187133789,4.946800708770752,5.79269552230835,6.502175331115723,7.314341068267822,7.508435249328613,6.751067638397217,5.373398780822754,3.785684108734131,5.884544372558594,4.73081111907959,4.861554145812988,4.640909671783447,5.2696757316589355,6.458392143249512,6.798177242279053,7.028088092803955,6.309681415557861,4.573829650878906,4.837992191314697,3.159802198410034,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]}],"layout":{"geo":{"bgcolor":"rgb(255,240,255)","landcolor":"rgba(175, 165, 166,0.7)","projection":{"type":"equirectangular"},"showcoastlines":true,"showcountries":true,"showframe":false},"margin":{"b":10,"l":10,"r":10,"t":70},"paper_bgcolor":"rgb(255,240,255)","template":{"data":{"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"choropleth":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"choropleth"}],"contour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"contour"}],"contourcarpet":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"contourcarpet"}],"heatmap":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"heatmap"}],"heatmapgl":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"heatmapgl"}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"histogram2d":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"histogram2d"}],"histogram2dcontour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"histogram2dcontour"}],"mesh3d":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"mesh3d"}],"parcoords":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"parcoords"}],"pie":[{"automargin":true,"type":"pie"}],"scatter":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter"}],"scatter3d":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter3d"}],"scattercarpet":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattercarpet"}],"scattergeo":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergeo"}],"scattergl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergl"}],"scattermapbox":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattermapbox"}],"scatterpolar":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolar"}],"scatterpolargl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolargl"}],"scatterternary":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterternary"}],"surface":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"surface"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}]},"layout":{"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"autotypenumbers":"strict","coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]],"sequential":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"sequentialminus":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]]},"colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"geo":{"bgcolor":"white","lakecolor":"white","landcolor":"#E5ECF6","showlakes":true,"showland":true,"subunitcolor":"white"},"hoverlabel":{"align":"left"},"hovermode":"closest","mapbox":{"style":"light"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"ternary":{"aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"title":{"x":0.05},"xaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2},"yaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2}}},"title":{"font":{"color":"black","family":"serif","size":30},"text":"<b>World Map for Global Happiness Index (2020)</b><br><sup>Hover over for Index values and Country names</sup>","x":0.5}}}},"output_type":"display_data"},"1":{"data":{"application/vnd.plotly.v1+json":{"config":{"plotlyServerURL":"https://plot.ly"},"data":[{"autocolorscale":false,"colorbar":{"title":{"font":{"family":"serif","size":20},"text":"<b>Peace Index </b>"}},"colorscale":[[0,"rgb(0, 155, 158)"],[0.16666666666666666,"rgb(66, 183, 185)"],[0.3333333333333333,"rgb(167, 211, 212)"],[0.5,"rgb(241, 241, 241)"],[0.6666666666666666,"rgb(228, 193, 217)"],[0.8333333333333334,"rgb(214, 145, 193)"],[1,"rgb(199, 93, 171)"]],"locations":["AFG","ALB","DZA","AGO","ARG","ARM","AUS","AUT","AZE","BHR","BGD","BLR","BEL","BEN","BTN","BOL","BIH","BWA","BRA","BGR","BFA","BDI","KHM","CMR","CAN","CAF","TCD","CHL","CHN","COL","CRI","CIV","HRV","CUB","CYP","CZE","COD","DNK","DJI","DOM","ECU","EGY","SLV","GNQ","ERI","EST","SWZ","ETH","FIN","FRA","GAB","GEO","DEU","GHA","GRC","GTM","GIN","GNB","GUY","HTI","HND","HUN","ISL","IND","IDN","IRN","IRQ","IRL","ISR","ITA","JAM","JPN","JOR","KAZ","KEN","KSV","KWT","KGZ","LAO","LVA","LBN","LSO","LBR","LBY","LTU","MDG","MWI","MYS","MLI","MRT","MUS","MEX","MDA","MNG","MNE","MAR","MOZ","MMR","NAM","NPL","NLD","NZL","NIC","NER","NGA","PRK","MKD","NOR","OMN","PAK","PSE","PAN","PNG","PRY","PER","PHL","POL","PRT","QAT","COG","ROU","RUS","RWA","SAU","SEN","SRB","SLE","SGP","SVK","SVN","SOM","ZAF","KOR","SSD","ESP","LKA","SDN","SWE","CHE","SYR","TWN","TJK","TZA","THA","GMB","TLS","TGO","TTO","TUN","TUR","TKM","UGA","UKR","ARE","GBR","USA","URY","UZB","VEN","VNM","YEM","ZMB","ZWE"],"marker":{"line":{"color":"black","width":1}},"reversescale":true,"text":["Afghanistan","Albania","Algeria","Angola","Argentina","Armenia","Australia","Austria","Azerbaijan","Bahrain","Bangladesh","Belarus","Belgium","Benin","Bhutan","Bolivia","Bosnia and Herzegovina","Botswana","Brazil","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Canada","Central African Republic","Chad","Chile","China","Colombia","Costa Rica","Cote d' Ivoire","Croatia","Cuba","Cyprus","Czech Republic","Democratic Republic of the Congo","Denmark","Djibouti","Dominican Republic","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Eswatini","Ethiopia","Finland","France","Gabon","Georgia","Germany","Ghana","Greece","Guatemala","Guinea","Guinea-Bissau","Guyana","Haiti","Honduras","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Israel","Italy","Jamaica","Japan","Jordan","Kazakhstan","Kenya","Kosovo","Kuwait","Kyrgyz Republic","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Lithuania","Madagascar","Malawi","Malaysia","Mali","Mauritania","Mauritius","Mexico","Moldova","Mongolia","Montenegro","Morocco","Mozambique","Myanmar","Namibia","Nepal","Netherlands","New Zealand","Nicaragua","Niger","Nigeria","North Korea","North Macedonia","Norway","Oman","Pakistan","Palestine","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Poland","Portugal","Qatar","Republic of the Congo","Romania","Russia","Rwanda","Saudi Arabia","Senegal","Serbia","Sierra Leone","Singapore","Slovakia","Slovenia","Somalia","South Africa","South Korea","South Sudan","Spain","Sri Lanka","Sudan","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","The Gambia","Timor-Leste","Togo","Trinidad and Tobago","Tunisia","Turkey","Turkmenistan","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States of America","Uruguay","Uzbekistan","Venezuela","Vietnam","Yemen","Zambia","Zimbabwe"],"type":"choropleth","z":[2.7039999999999997,6.3580000000000005,5.42,5.936,6.0600000000000005,6.008,7.13,7.478,5.576,5.698,5.796,5.796,7.029999999999999,5.678,6.954000000000001,5.802,6.038,6.4559999999999995,5.182,6.744,5.454,5.09,6.0600000000000005,4.72,7.338,3.652,5.016,6.338,5.86,4.736,6.561999999999999,5.678,6.922000000000001,5.942,6.236000000000001,7.308,3.6319999999999997,7.464,5.634,6.01,5.866,5.18,5.654,6.288,4.856,6.71,5.996,5.016,7.218,6.208,5.672,5.95,7.002,6.476,6.256,5.598,5.88,5.758,5.864,5.618,5.574,6.928,7.7940000000000005,4.86,6.428,4.7,3.192,7.242,4.514,6.732,6.042,7.224,6.154,6.1419999999999995,5.312,6,6.609999999999999,5.826,6.343999999999999,6.622,4.48,5.66,6.234,3.6559999999999997,6.708,6.12,6.182,6.896,4.55,5.474,6.88,4.858,6.204000000000001,6.466,6.266,5.894,5.768,5.28,6.2219999999999995,5.97,6.958,7.513999999999999,4.952,4.884,4.44,4.11,6.318,7.058,6.0280000000000005,4.154,4.632,6.216,5.794,5.98,5.886,5.138,6.668,7.5280000000000005,6.82,5.34,6.9399999999999995,3.998,6.004,5.22,6.258,6.466,6.256,7.3919999999999995,6.838,7.302,3.646,5.34,6.372,3.208,6.6739999999999995,6.026,4.072,7.058,7.306,3.192,6.636,5.74,6.34,5.55,6.172000000000001,6.314,5.644,5.944,5.832,4.204,5.656,5.558,4.24,6.198,6.534,5.46,6.598,5.882,4.162,6.1259999999999994,3.346,6.356,5.132]}],"layout":{"geo":{"bgcolor":"rgb(255,240,255)","landcolor":"rgba(175, 165, 166,0.7)","projection":{"type":"equirectangular"},"showcoastlines":true,"showcountries":true,"showframe":false},"margin":{"b":10,"l":10,"r":10,"t":70},"paper_bgcolor":"rgb(255,240,255)","template":{"data":{"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"choropleth":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"choropleth"}],"contour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"contour"}],"contourcarpet":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"contourcarpet"}],"heatmap":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"heatmap"}],"heatmapgl":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"heatmapgl"}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"histogram2d":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"histogram2d"}],"histogram2dcontour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"histogram2dcontour"}],"mesh3d":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"mesh3d"}],"parcoords":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"parcoords"}],"pie":[{"automargin":true,"type":"pie"}],"scatter":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter"}],"scatter3d":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter3d"}],"scattercarpet":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattercarpet"}],"scattergeo":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergeo"}],"scattergl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergl"}],"scattermapbox":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattermapbox"}],"scatterpolar":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolar"}],"scatterpolargl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolargl"}],"scatterternary":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterternary"}],"surface":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"surface"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}]},"layout":{"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"autotypenumbers":"strict","coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]],"sequential":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"sequentialminus":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]]},"colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"geo":{"bgcolor":"white","lakecolor":"white","landcolor":"#E5ECF6","showlakes":true,"showland":true,"subunitcolor":"white"},"hoverlabel":{"align":"left"},"hovermode":"closest","mapbox":{"style":"light"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"ternary":{"aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"title":{"x":0.05},"xaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2},"yaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2}}},"title":{"font":{"color":"black","family":"serif","size":30},"text":"<b>World Map for Global Peace Index (2020)</b><br><sup>Hover over for Index values and Country names</sup>","x":0.5}}}},"output_type":"display_data"}},"pos":37,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":17,"id":"2ef188","input":"def hos_analysis(year):\n\n    \"\"\"\n    This function takes in a year value and then identfies the countries (and leaders) in the Female Head\n    of State Data who were in power during this year. We keep observation where the start date< Jan 01 of next year\n    and end date> Dec 31 of last year\n\n    Paramters\n    ---------\n    year: int\n        Year for which we want our analysis\n        \n    Returns\n    -------\n    data: pd.Dataframe\n        Dataset for a particular year identifying countries which had a female head of state.\n    \"\"\"\n    \n    assert type(year)==int\n    assert (year<2021) & (year>2007)\n    \n    #Keep relevant countries\n    df_hos=F_Head_of_State.loc[(\n        F_Head_of_State[\"Start_date\"]< str(year+1)+'-01-01') & (\n        F_Head_of_State[\"End_date\"]> str(year-1)+'-12-31'),:]\n    \n    #Merge with relevant columns from master file\n    df_hnp=master_file.loc[master_file['Year']==year,[\"Country\",\n    \"Year\",\"Happiness_index\",\"Log GDP per capita\",\"Peace_index\"]]\n    \n    #Our data is only for a particular year so we only need to merge on country\n    merged=df_hnp.merge(df_hos, how='left', on='Country') \n    \n    #Make binary variable which takes a value of 1 for countries with female heads of states and 0 otherwise\n    merged['Female_head'] = merged['Name'].apply(lambda x: 1 if pd.notnull(x) else 0)  \n\n    #HOS Gender column with values male and female                                                            \n    merged[\"HOS Gender\"]= np.where(merged[\"Female_head\"]==1,\"Female\",\"Male\")\n    return merged.iloc[:,[0,5,1,6,7,2,4,3,8,9]].sort_values(\"Female_head\", ascending=False)","pos":40,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":18,"id":"df5374","input":"#Store result from the function in a dataset and drop unnecessary columns\nfhos_2020= hos_analysis(2020).drop([\"Start_date\",\"End_date\",\"Year\",\"Female_head\",\"Name\"], axis=1).dropna()\n\n#Calculate means\nmeans_2020= fhos_2020.groupby(\"HOS Gender\").agg(\"mean\").iloc[[1,0],:]\n\nfig, ax = plt.subplots(nrows=1, ncols=2, figsize=(20,10),sharex=True)\n\n#Set color directory for consistency\n\ng_colors= {'Male':(0.585,0.5976,0.9),'Female':(0.85,0.629,0.2975)}\n\n#Subplot 1\n\n#Plot barchart for Happiness and Peace\nmeans_2020.T.iloc[:2,:].plot(\n    ax=ax[0],kind='barh',color=[g_colors[v] for v in g_colors.keys()],edgecolor='k',label=True,fontsize=20,width=0.3)\n\nax[0].set_xlabel(\"Average Index Values\",fontdict=def_font)\nax[0].set_yticklabels([\"Happiness\",\"Peace\"],fontdict=def_font)\n\n#Customize order of labels in legend\nhandles, labels = ax[0].get_legend_handles_labels()\n\n#specify order of items in legend\norder = [1,0]\n\n#add legend to plot\nax[0].legend([handles[idx] for idx in order],[labels[idx] for idx in order],loc='upper right',\nbbox_to_anchor=(1.3, 1),prop=def_font)\n\n\ns=0\nfor i in [\"Happiness_index\",\"Peace_index\"]:\n    ax[0].text(means_2020.loc[\"Female\",i]+0.1,s+0.05,str(means_2020.loc[\"Female\",i].round(1)),fontsize=15)\n    ax[0].text(means_2020.loc[\"Male\",i]+0.1,s-0.1,str(means_2020.loc[\"Male\",i].round(1)),fontsize=15)\n    s+=1\n\n\n#Subplot 2\n#Plot barchart for Log GDP per capita\nmeans_2020.iloc[:,2].to_frame().T.plot(ax=ax[1],kind='barh',\n            color=[g_colors[v] for v in g_colors.keys()],edgecolor='k',label=True,legend=False,width=0.1, \n            fontsize=20)\nax[1].set_xlabel(\"Average Log Values\",fontdict=def_font)\n\n\n#Add annotations for bar chart heights\nax[1].text(means_2020.loc[\"Female\",\"Log GDP per capita\"]+0.1,0.02,str(means_2020.loc[\"Female\",\"Log GDP per capita\"].round(1)),fontsize=15)\nax[1].text(means_2020.loc[\"Male\",\"Log GDP per capita\"]+0.1,-0.03,str(means_2020.loc[\"Male\",\"Log GDP per capita\"].round(1)),fontsize=15)\nax[1].set_xlim([0,11])\nax[1].set_yticklabels([\"Log GDP per capita\"],fontdict=def_font)\n\n\nfig.suptitle(\"Averages of Female Led Countries vs. Male Led Countries\",fontproperties=def_font_title)\nfig.set_facecolor(background)\nfig.subplots_adjust(wspace=10)\nfig.tight_layout()\n","output":{"0":{"data":{"image/png":"71f38fa502c18d52bc9f86cbca19092b980c85c5","text/plain":"<Figure size 1440x720 with 2 Axes>"},"output_type":"display_data"}},"pos":41,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":19,"id":"96f248","input":"full_panel= hos_analysis(2008)\nfor i in range(2009,2021):\n    full_panel= pd.concat([full_panel,hos_analysis(i)]).drop([\"Start_date\",\"End_date\",\"Log GDP per capita\"], axis=1)\n    full_panel[\"Name\"].fillna(\"NA\",inplace=True)\n    full_panel= full_panel.dropna()\n","pos":43,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":2,"id":"a9d269","input":"#Read and Clean Peace Index Data\n\npeace_index= pd.read_excel(\"GPI.xlsx\", sheet_name=\"Overall Scores\").iloc[2:,:16] #Read Excel file\n\n#Cleaning\n\npeace_index.columns= peace_index.iloc[0] #Set Column names equal to the first row\npeace_index=peace_index.drop([2], axis=0) #Drop uneccessary row\n\npeace_index=peace_index.set_index([\"Country\",'iso3c']).T.unstack().reset_index().rename(\n    columns={2:'Year', 0:'Peace_index','iso3c':\"Code\"}) #Reshape data from wide to long format \n\npeace_index[\"Peace_index\"]= peace_index[\"Peace_index\"].astype(float) #Convert Index Values for float\n\npeace_index[\"Peace_index\"]= 2*(5-peace_index[\"Peace_index\"]) #Transform index values to make it consistent with the happiness index values","pos":6,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":20,"id":"173893","input":"fig,ax= plt.subplots(nrows=1,ncols=2, figsize=def_size, sharex=True,sharey=True)\n\ns=0\n\n#Line Plots for Happiness and Peace\nfor j in [\"Happiness_index\",\"Peace_index\"]:\n    #Plot means for females and males \n    for i in full_panel['HOS Gender'].unique():\n        full_panel.loc[full_panel['HOS Gender']==i,[\"Year\",j]].groupby(\"Year\")[j].mean().plot(\n            ax=ax[s],color=g_colors[i], linewidth=5,legend=False,fontsize=15)\n    #Full sample plot\n    full_panel.loc[:,[\"Year\",j]].groupby(\"Year\")[j].mean().plot(ax=ax[s],\n    color=(0,0,0,0.25),label='full',linewidth=3,linestyle='--')\n    ax[s].set_title(j.split(\"_\")[0],fontdict=def_font)\n    ax[s].set_ylabel(\"Index Average\",fontdict=def_font)\n    ax[s].set_xlabel(\"Year\",fontdict=def_font)\n    ax[s].set_ylim([5,7])\n    s+=1\n\nfont_annot= def_font.copy()\nfont_annot['family']= 'Arial'\nfont_annot['color']='cadetblue'\n\n\n#Add annotations\nax[0].text(2010.5,6.25,\"Female-led\",fontdict=font_annot)\nax[0].text(2010.5,6.19,\"countries\",fontdict=font_annot)\nax[0].text(2013.5,5.42,\"Full Sample\",fontdict=font_annot)\nax[0].text(2018.6,5.35,\"Male-led\",fontdict=font_annot)\nax[0].text(2018.6,5.3,\"countries\",fontdict=font_annot)\n\nax[1].text(2010.3,6.28,\"Female-led\",fontdict=font_annot)\nax[1].text(2010.3,6.23,\"countries\",fontdict=font_annot)\nax[1].text(2014,5.95,\"Full Sample\",fontdict=font_annot)\nax[1].text(2018,5.76,\"Male-led\",fontdict=font_annot)\nax[1].text(2018,5.71,\"countries\",fontdict=font_annot)\n\nfig.suptitle(\"Time Trends of Averages\", fontproperties=def_font_title)\nfig.set_facecolor(background)\nfig.tight_layout()\n\n\n","output":{"0":{"data":{"image/png":"8e8c763edb5882866bc04a2f186cd9ead5dae33b","text/plain":"<Figure size 1440x576 with 2 Axes>"},"output_type":"display_data"}},"pos":45,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":21,"id":"ad0c88","input":"def stats_data(df):\n\n    \"\"\"\n    This function takes in a sorted (by index value) dataframe for a particular index and year. \n    It combines country names with head of state names in a single column.\n    \n    It then produces two subsets of data, one for the top 10 and one for the worst 10.\n    It then uses the female head binary variable to calculate the proportion of female heads, as well\n    as the female-led country (and head of state) names in each subset\n\n    All data is concatenated in a single dataframe\n\n    Paramters\n    ---------\n    df: pd.Dataframe\n        Relevant sorted dataset for a particular index and year\n        \n    Returns\n    -------\n    data: pd.Dataframe\n        Dataframe for a particular index and year, identifying the proprtion of countries (Top and worst 10)\n        with female heads of states, as well as the country and head of state names for these countries.\n    \"\"\"\n\n    df[\"Country\"]= df[\"Country\"]+str(\" (\")+df[\"Name\"]+str(\")\")\n    #Top 10\n    df1= df.head(10)\n    Prop_T10= df1[\"Female_head\"].mean()*100\n    C_T10= str(df1.query(\"Female_head==1\")[\"Country\"].to_list()).replace(\"[\",\"\").replace(\"\\'\",\"\").replace(\"]\",\"\")\n    \n    #Bottom 10\n    df2= df.tail(10)\n    Prop_W10= df2[\"Female_head\"].mean()*100\n    C_W10= str(df2.query(\"Female_head==1\")[\"Country\"].to_list()).replace(\"[\",\"\").replace(\"\\'\",\"\").replace(\"]\",\"\")\n    \n    year= df[\"Year\"][0]\n\n    data1 = pd.DataFrame([{\"Year\":year,\"Category\":\"Top 10\" ,\"Fem HOS (%)\": Prop_T10,\"Countries and Heads\":C_T10}]).set_index('Year')\n    data2 = pd.DataFrame([{\"Year\":year,\"Category\":\"Worst 10\",\"Fem HOS (%)\": Prop_W10,\"Countries and Heads\":C_W10}]).set_index('Year')\n    \n    return pd.concat([data1,data2])\n\ndef stats(year,index):\n    \"\"\"\n    This function takes in a particular year and index name. It filters the full panel dataset on the year\n    and then sorts it by the index. \n\n    It the runs the stats_data function for this dataset.\n\n    Paramters\n    ---------\n    \n    year: int\n        Relevant year\n\n    index: string\n        Relevant index name\n        \n    Returns\n    -------\n    data: pd.Dataframe\n        Dataframe for a particular index and year, identifying the proprtion of countries (Top and worst 10)\n        with female heads of states, as well as the country and head of state names for these countries.\n    \"\"\"\n    df= full_panel.query(\"Year== @year\")\n    \n    df_i= df.sort_values(index, ascending=False)\n    data= stats_data(df_i).fillna(\"\")\n\n    return data\n    \ndef fullstats(index):\n    \"\"\"\n    This function creates a full panel of dataset by running the stats function defined above on all years from\n    2008 to 2020\n\n    Paramters\n    ---------\n    index: string\n        Relevant index name   \n    Returns\n    -------\n    data: pd.Dataframe\n        Full panel dataset which for each year identifies the proprtion of countries (Top and worst 10)\n        with female heads of states, as well as the country and head of state names for these countries.\n    \"\"\"\n    full_stats= stats(2008,index)\n    for i in range(2009,2021):\n        full_stats= pd.concat([full_stats,stats(i,index)])\n    return full_stats.reset_index()","pos":47,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":22,"id":"da1311","input":"\ndef bars(index):\n\n    \"\"\"\n    This function takes in an index name, creates the full stats data for the particular index\n    and then displays the output in an interactive barchart.\n    \n\n    Paramters\n    ---------\n    index: string\n           Relevant index name   \n    Returns\n    -------\n    fig:   plotly figure\n           Plotly Barchart \n    \"\"\"\n    assert (index==\"Happiness\") | (index==\"Peace\")\n    \n    df= fullstats(index+\"_index\")\n\n    fig = px.bar(df, x='Year',y='Fem HOS (%)',hover_data=['Countries and Heads'], color='Category', text='Fem HOS (%)',\n    color_discrete_sequence=[\"rgba(141,211,199,0.7)\", \"rgba(217,95,2,0.7)\"])\n    fig.update_traces(texttemplate='%{text:.2s}', textposition='outside',textfont_color=\"rgba(0,0,0,0.6)\")\n\n    fig.update_layout(\n        title_text='<b>'+index+\n        ': Percentage of H.O.S which are Female in Top 10 and Worst 10 Countries </b><br><sup>Hover'+\n        ' over for names of countries led by females (head names in brackets) </sup>',\n        titlefont=dict(size =25, color='black', family='serif'),\n        title_x=0.5,\n        barmode='group', \n        bargap=0.15, # gap between bars of adjacent location coordinates.\n        bargroupgap=0.1, # gap between bars of the same location coordinate.\n        margin=dict(l=10, r=10, t=70, b=10),\n        paper_bgcolor='rgb(255,240,255)',\n        xaxis = dict(\n        tickmode = 'linear',\n        tickvals = list(range(2009,2021))),\n        yaxis_ticksuffix=\"%\"\n    )\n\n    fig.update_yaxes(title={'text':'<b> Percentage of H.O.S which are Female </b>','font':{'size':15,'family':'serif'}})\n    fig.update_xaxes(title={'text':'<b> Year </b>','font':{'size':15,'family':'serif'}})\n    \n\n    #Add horizontal lines\n\n    h_lines= df.loc[df[\"Category\"]==\"Top 10\",\"Fem HOS (%)\"]\n    for i in [min,np.mean,max]:\n        y_l=h_lines.agg(i)\n        fig.add_hline(y=y_l,line_width=1, line_dash=\"dot\", line_color=\"rgba(0,0,255,0.7)\")\n    \n    #Add annotations\n    font_p= dict(color=\"rgba(0,0,255,0.7)\",size=10)\n            \n    fig.add_annotation(x=2012, y=h_lines.agg(max),\n            text=  \"<b> Max (%) in Top 10 </b>\",\n            showarrow=False, yshift=10,\n            font=font_p)\n\n    fig.add_annotation(x=2014.9, y=h_lines.agg(np.mean),\n            text=  \"<b> Mean (%) in Top 10 </b>\",\n            showarrow=False, yshift=10,\n            font=font_p)\n\n    fig.add_annotation(x=2017.3, y=h_lines.agg(np.min),\n            text=  \"<b> Min (%) </b>\",\n            showarrow=False, yshift=40,\n            font=font_p)\n    fig.add_annotation(x=2017.3, y=h_lines.agg(np.min),\n            text=  \"<b> in </b>\",\n            showarrow=False, yshift=25,\n            font=font_p)\n    fig.add_annotation(x=2017.3, y=h_lines.agg(np.min),\n            text=  \"<b> Top 10 </b>\",\n            showarrow=False, yshift=10,\n            font=font_p)\n            \n    fig.show()\n\n#Plot bar chart for happiness\nbars(\"Happiness\") ","output":{"0":{"data":{"application/vnd.plotly.v1+json":{"config":{"plotlyServerURL":"https://plot.ly"},"data":[{"alignmentgroup":"True","customdata":[["Finland (Tarja Halonen), Ireland (Mary McAleese), New Zealand (Helen Clark)"],["Ireland (Mary McAleese)"],["Australia (Julia Gillard), Finland (Tarja Halonen), Finland (Mari Kiviniemi)"],["Denmark (Helle Thorning-Schmidt), Australia (Julia Gillard), Finland (Mari Kiviniemi), Finland (Tarja Halonen)"],["Iceland (Jóhanna Sigurðardóttir), Denmark (Helle Thorning-Schmidt), Finland (Tarja Halonen)"],["Denmark (Helle Thorning-Schmidt), Iceland (Jóhanna Sigurðardóttir), Australia (Julia Gillard)"],["Denmark (Helle Thorning-Schmidt), Norway (Erna Solberg), Costa Rica (Laura Chinchilla)"],["Norway (Erna Solberg), Denmark (Helle Thorning-Schmidt)"],["Norway (Erna Solberg)"],["Norway (Erna Solberg), Iceland (Katrín Jakobsdóttir), New Zealand (Jacinda Ardern), Austria (Doris Bures)"],["Norway (Erna Solberg), New Zealand (Jacinda Ardern), United Kingdom (Theresa May)"],["Finland (Sanna Marin), Denmark (Mette Frederiksen), Iceland (Katrín Jakobsdóttir), Norway (Erna Solberg)"],["Finland (Sanna Marin), Iceland (Katrín Jakobsdóttir), Denmark (Mette Frederiksen), Germany (Angela Merkel), Norway (Erna Solberg), New Zealand (Jacinda Ardern), Austria (Brigitte Bierlein)"]],"hovertemplate":"Category=Top 10<br>Year=%{x}<br>Fem HOS (%)=%{text}<br>Countries and Heads=%{customdata[0]}<extra></extra>","legendgroup":"Top 10","marker":{"color":"rgba(141,211,199,0.7)","pattern":{"shape":""}},"name":"Top 10","offsetgroup":"Top 10","orientation":"v","showlegend":true,"text":[30,10,30,40,30,30,30,20,10,40,30,40,70],"textfont":{"color":"rgba(0,0,0,0.6)"},"textposition":"outside","texttemplate":"%{text:.2s}","type":"bar","x":[2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020],"xaxis":"x","y":[30,10,30,40,30,30,30,20,10,40,30,40,70],"yaxis":"y"},{"alignmentgroup":"True","customdata":[["Haiti (Michèle Pierre-Louis)"],[""],[""],[""],[""],["South Africa (Ivy Matsepe-Casaburri), Senegal (Aminata Touré)"],[""],["Haiti (Florence Duperval Guillaume), Liberia (Ellen Johnson Sirleaf)"],["Liberia (Ellen Johnson Sirleaf), Central African Republic (Catherine Samba-Panza)"],[""],[""],[""],["Myanmar (Aung San Suu Kyi)"]],"hovertemplate":"Category=Worst 10<br>Year=%{x}<br>Fem HOS (%)=%{text}<br>Countries and Heads=%{customdata[0]}<extra></extra>","legendgroup":"Worst 10","marker":{"color":"rgba(217,95,2,0.7)","pattern":{"shape":""}},"name":"Worst 10","offsetgroup":"Worst 10","orientation":"v","showlegend":true,"text":[10,0,0,0,0,20,0,20,20,0,0,0,10],"textfont":{"color":"rgba(0,0,0,0.6)"},"textposition":"outside","texttemplate":"%{text:.2s}","type":"bar","x":[2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020],"xaxis":"x","y":[10,0,0,0,0,20,0,20,20,0,0,0,10],"yaxis":"y"}],"layout":{"annotations":[{"font":{"color":"rgba(0,0,255,0.7)","size":10},"showarrow":false,"text":"<b> Max (%) in Top 10 </b>","x":2012,"y":70,"yshift":10},{"font":{"color":"rgba(0,0,255,0.7)","size":10},"showarrow":false,"text":"<b> Mean (%) in Top 10 </b>","x":2014.9,"y":31.53846153846154,"yshift":10},{"font":{"color":"rgba(0,0,255,0.7)","size":10},"showarrow":false,"text":"<b> Min (%) </b>","x":2017.3,"y":10,"yshift":40},{"font":{"color":"rgba(0,0,255,0.7)","size":10},"showarrow":false,"text":"<b> in </b>","x":2017.3,"y":10,"yshift":25},{"font":{"color":"rgba(0,0,255,0.7)","size":10},"showarrow":false,"text":"<b> Top 10 </b>","x":2017.3,"y":10,"yshift":10}],"bargap":0.15,"bargroupgap":0.1,"barmode":"group","legend":{"title":{"text":"Category"},"tracegroupgap":0},"margin":{"b":10,"l":10,"r":10,"t":70},"paper_bgcolor":"rgb(255,240,255)","shapes":[{"line":{"color":"rgba(0,0,255,0.7)","dash":"dot","width":1},"type":"line","x0":0,"x1":1,"xref":"x domain","y0":10,"y1":10,"yref":"y"},{"line":{"color":"rgba(0,0,255,0.7)","dash":"dot","width":1},"type":"line","x0":0,"x1":1,"xref":"x domain","y0":31.53846153846154,"y1":31.53846153846154,"yref":"y"},{"line":{"color":"rgba(0,0,255,0.7)","dash":"dot","width":1},"type":"line","x0":0,"x1":1,"xref":"x domain","y0":70,"y1":70,"yref":"y"}],"template":{"data":{"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"choropleth":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"choropleth"}],"contour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"contour"}],"contourcarpet":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"contourcarpet"}],"heatmap":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"heatmap"}],"heatmapgl":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"heatmapgl"}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"histogram2d":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"histogram2d"}],"histogram2dcontour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"histogram2dcontour"}],"mesh3d":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"mesh3d"}],"parcoords":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"parcoords"}],"pie":[{"automargin":true,"type":"pie"}],"scatter":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter"}],"scatter3d":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter3d"}],"scattercarpet":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattercarpet"}],"scattergeo":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergeo"}],"scattergl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergl"}],"scattermapbox":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattermapbox"}],"scatterpolar":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolar"}],"scatterpolargl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolargl"}],"scatterternary":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterternary"}],"surface":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"surface"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}]},"layout":{"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"autotypenumbers":"strict","coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]],"sequential":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"sequentialminus":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]]},"colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"geo":{"bgcolor":"white","lakecolor":"white","landcolor":"#E5ECF6","showlakes":true,"showland":true,"subunitcolor":"white"},"hoverlabel":{"align":"left"},"hovermode":"closest","mapbox":{"style":"light"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"ternary":{"aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"title":{"x":0.05},"xaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2},"yaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2}}},"title":{"font":{"color":"black","family":"serif","size":25},"text":"<b>Happiness: Percentage of H.O.S which are Female in Top 10 and Worst 10 Countries </b><br><sup>Hover over for names of countries led by females (head names in brackets) </sup>","x":0.5},"xaxis":{"anchor":"y","domain":[0,1],"tickmode":"linear","tickvals":[2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020],"title":{"font":{"family":"serif","size":15},"text":"<b> Year </b>"}},"yaxis":{"anchor":"x","domain":[0,1],"ticksuffix":"%","title":{"font":{"family":"serif","size":15},"text":"<b> Percentage of H.O.S which are Female </b>"}}}}},"output_type":"display_data"}},"pos":49,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":23,"id":"f92361","input":"\n#Plot bar chart for peace\nbars(\"Peace\")","output":{"0":{"data":{"application/vnd.plotly.v1+json":{"config":{"plotlyServerURL":"https://plot.ly"},"data":[{"alignmentgroup":"True","customdata":[["New Zealand (Helen Clark), Ireland (Mary McAleese)"],["Ireland (Mary McAleese)"],["Finland (Tarja Halonen), Finland (Mari Kiviniemi), Australia (Julia Gillard)"],["Denmark (Helle Thorning-Schmidt), Finland (Tarja Halonen), Finland (Mari Kiviniemi)"],["Iceland (Jóhanna Sigurðardóttir), Denmark (Helle Thorning-Schmidt), Finland (Tarja Halonen)"],["Iceland (Jóhanna Sigurðardóttir), Denmark (Helle Thorning-Schmidt), Slovenia (Alenka Bratušek)"],["Denmark (Helle Thorning-Schmidt), Slovenia (Alenka Bratušek)"],["Denmark (Helle Thorning-Schmidt)"],["Austria (Doris Bures)"],["Iceland (Katrín Jakobsdóttir), New Zealand (Jacinda Ardern), Austria (Doris Bures), Singapore (Halimah Yacob)"],["New Zealand (Jacinda Ardern), Singapore (Halimah Yacob)"],["Iceland (Katrín Jakobsdóttir), New Zealand (Jacinda Ardern), Austria (Brigitte Bierlein), Denmark (Mette Frederiksen), Singapore (Halimah Yacob)"],["Iceland (Katrín Jakobsdóttir), New Zealand (Jacinda Ardern), Austria (Brigitte Bierlein), Denmark (Mette Frederiksen)"]],"hovertemplate":"Category=Top 10<br>Year=%{x}<br>Fem HOS (%)=%{text}<br>Countries and Heads=%{customdata[0]}<extra></extra>","legendgroup":"Top 10","marker":{"color":"rgba(141,211,199,0.7)","pattern":{"shape":""}},"name":"Top 10","offsetgroup":"Top 10","orientation":"v","showlegend":true,"text":[20,10,30,30,30,30,20,10,10,40,20,50,40],"textfont":{"color":"rgba(0,0,0,0.6)"},"textposition":"outside","texttemplate":"%{text:.2s}","type":"bar","x":[2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020],"xaxis":"x","y":[20,10,30,30,30,30,20,10,10,40,20,50,40],"yaxis":"y"},{"alignmentgroup":"True","customdata":[["Georgia (Nino Burjanadze)"],[""],[""],[""],[""],[""],[""],[""],["Central African Republic (Catherine Samba-Panza)"],[""],[""],[""],[""]],"hovertemplate":"Category=Worst 10<br>Year=%{x}<br>Fem HOS (%)=%{text}<br>Countries and Heads=%{customdata[0]}<extra></extra>","legendgroup":"Worst 10","marker":{"color":"rgba(217,95,2,0.7)","pattern":{"shape":""}},"name":"Worst 10","offsetgroup":"Worst 10","orientation":"v","showlegend":true,"text":[10,0,0,0,0,0,0,0,10,0,0,0,0],"textfont":{"color":"rgba(0,0,0,0.6)"},"textposition":"outside","texttemplate":"%{text:.2s}","type":"bar","x":[2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020],"xaxis":"x","y":[10,0,0,0,0,0,0,0,10,0,0,0,0],"yaxis":"y"}],"layout":{"annotations":[{"font":{"color":"rgba(0,0,255,0.7)","size":10},"showarrow":false,"text":"<b> Max (%) in Top 10 </b>","x":2012,"y":50,"yshift":10},{"font":{"color":"rgba(0,0,255,0.7)","size":10},"showarrow":false,"text":"<b> Mean (%) in Top 10 </b>","x":2014.9,"y":26.153846153846153,"yshift":10},{"font":{"color":"rgba(0,0,255,0.7)","size":10},"showarrow":false,"text":"<b> Min (%) </b>","x":2017.3,"y":10,"yshift":40},{"font":{"color":"rgba(0,0,255,0.7)","size":10},"showarrow":false,"text":"<b> in </b>","x":2017.3,"y":10,"yshift":25},{"font":{"color":"rgba(0,0,255,0.7)","size":10},"showarrow":false,"text":"<b> Top 10 </b>","x":2017.3,"y":10,"yshift":10}],"bargap":0.15,"bargroupgap":0.1,"barmode":"group","legend":{"title":{"text":"Category"},"tracegroupgap":0},"margin":{"b":10,"l":10,"r":10,"t":70},"paper_bgcolor":"rgb(255,240,255)","shapes":[{"line":{"color":"rgba(0,0,255,0.7)","dash":"dot","width":1},"type":"line","x0":0,"x1":1,"xref":"x domain","y0":10,"y1":10,"yref":"y"},{"line":{"color":"rgba(0,0,255,0.7)","dash":"dot","width":1},"type":"line","x0":0,"x1":1,"xref":"x domain","y0":26.153846153846153,"y1":26.153846153846153,"yref":"y"},{"line":{"color":"rgba(0,0,255,0.7)","dash":"dot","width":1},"type":"line","x0":0,"x1":1,"xref":"x domain","y0":50,"y1":50,"yref":"y"}],"template":{"data":{"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"choropleth":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"choropleth"}],"contour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"contour"}],"contourcarpet":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"contourcarpet"}],"heatmap":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"heatmap"}],"heatmapgl":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"heatmapgl"}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"histogram2d":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"histogram2d"}],"histogram2dcontour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"histogram2dcontour"}],"mesh3d":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"mesh3d"}],"parcoords":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"parcoords"}],"pie":[{"automargin":true,"type":"pie"}],"scatter":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter"}],"scatter3d":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter3d"}],"scattercarpet":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattercarpet"}],"scattergeo":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergeo"}],"scattergl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergl"}],"scattermapbox":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattermapbox"}],"scatterpolar":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolar"}],"scatterpolargl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolargl"}],"scatterternary":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterternary"}],"surface":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"type":"surface"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}]},"layout":{"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"autotypenumbers":"strict","coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]],"sequential":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]],"sequentialminus":[[0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1,"#f0f921"]]},"colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"geo":{"bgcolor":"white","lakecolor":"white","landcolor":"#E5ECF6","showlakes":true,"showland":true,"subunitcolor":"white"},"hoverlabel":{"align":"left"},"hovermode":"closest","mapbox":{"style":"light"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"ternary":{"aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"title":{"x":0.05},"xaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2},"yaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2}}},"title":{"font":{"color":"black","family":"serif","size":25},"text":"<b>Peace: Percentage of H.O.S which are Female in Top 10 and Worst 10 Countries </b><br><sup>Hover over for names of countries led by females (head names in brackets) </sup>","x":0.5},"xaxis":{"anchor":"y","domain":[0,1],"tickmode":"linear","tickvals":[2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020],"title":{"font":{"family":"serif","size":15},"text":"<b> Year </b>"}},"yaxis":{"anchor":"x","domain":[0,1],"ticksuffix":"%","title":{"font":{"family":"serif","size":15},"text":"<b> Percentage of H.O.S which are Female </b>"}}}}},"output_type":"display_data"}},"pos":51,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":3,"id":"0f0c48","input":"#Read (via an API request) and Clean Happiness Index Data\n\nurl_happiness = \"https://happiness-report.s3.amazonaws.com/2021/DataPanelWHR2021C2.xls\" #Set url \nresp2 = requests.get(url_happiness)        #Get API Request\n\nif resp2.status_code>199:\n    df_happiness= pd.read_excel(resp2.content) #Read request content\n    df_happiness=df_happiness.rename(columns={'Country name':'Country', 'year':'Year','Life Ladder':'Happiness_index'}) #Rename coloumns\n\n    #Cleaning in happiness index\n\n    #Rename country names in the happiness index dataframe to match names in the peace index data\n\n    dict1={'Congo (Kinshasa)':'Democratic Republic of the Congo', 'Congo (Brazzaville)':'Republic of the Congo', \n     'United States':'United States of America', 'Palestinian Territories':'Palestine', \n     'Gambia':'The Gambia', 'Taiwan Province of China':'Taiwan', 'Kyrgyzstan':'Kyrgyz Republic',\n     \"Ivory Coast\":\"Cote d' Ivoire\"}\n    df_happiness= df_happiness.replace({'Country':dict1})\nelse:\n    raise ValueError(f\"Response error with code {resp2.status_code}\")\n","pos":7,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":4,"id":"4161d2","input":"\nmaster_file=df_happiness.merge(peace_index, how='outer', on=['Country', 'Year'])\nmaster_file.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country</th>\n      <th>Year</th>\n      <th>Happiness_index</th>\n      <th>Log GDP per capita</th>\n      <th>Social support</th>\n      <th>Healthy life expectancy at birth</th>\n      <th>Freedom to make life choices</th>\n      <th>Generosity</th>\n      <th>Perceptions of corruption</th>\n      <th>Positive affect</th>\n      <th>Negative affect</th>\n      <th>Code</th>\n      <th>Peace_index</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Afghanistan</td>\n      <td>2008</td>\n      <td>3.723590</td>\n      <td>7.370100</td>\n      <td>0.450662</td>\n      <td>50.799999</td>\n      <td>0.718114</td>\n      <td>0.167640</td>\n      <td>0.881686</td>\n      <td>0.517637</td>\n      <td>0.258195</td>\n      <td>AFG</td>\n      <td>3.742</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Afghanistan</td>\n      <td>2009</td>\n      <td>4.401778</td>\n      <td>7.539972</td>\n      <td>0.552308</td>\n      <td>51.200001</td>\n      <td>0.678896</td>\n      <td>0.190099</td>\n      <td>0.850035</td>\n      <td>0.583926</td>\n      <td>0.237092</td>\n      <td>AFG</td>\n      <td>3.460</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Afghanistan</td>\n      <td>2010</td>\n      <td>4.758381</td>\n      <td>7.646709</td>\n      <td>0.539075</td>\n      <td>51.599998</td>\n      <td>0.600127</td>\n      <td>0.120590</td>\n      <td>0.706766</td>\n      <td>0.618265</td>\n      <td>0.275324</td>\n      <td>AFG</td>\n      <td>3.758</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Afghanistan</td>\n      <td>2011</td>\n      <td>3.831719</td>\n      <td>7.619532</td>\n      <td>0.521104</td>\n      <td>51.919998</td>\n      <td>0.495901</td>\n      <td>0.162427</td>\n      <td>0.731109</td>\n      <td>0.611387</td>\n      <td>0.267175</td>\n      <td>AFG</td>\n      <td>3.756</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Afghanistan</td>\n      <td>2012</td>\n      <td>3.782938</td>\n      <td>7.705479</td>\n      <td>0.520637</td>\n      <td>52.240002</td>\n      <td>0.530935</td>\n      <td>0.236032</td>\n      <td>0.775620</td>\n      <td>0.710385</td>\n      <td>0.267919</td>\n      <td>AFG</td>\n      <td>3.518</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"       Country  Year  Happiness_index  Log GDP per capita  Social support  \\\n0  Afghanistan  2008         3.723590            7.370100        0.450662   \n1  Afghanistan  2009         4.401778            7.539972        0.552308   \n2  Afghanistan  2010         4.758381            7.646709        0.539075   \n3  Afghanistan  2011         3.831719            7.619532        0.521104   \n4  Afghanistan  2012         3.782938            7.705479        0.520637   \n\n   Healthy life expectancy at birth  Freedom to make life choices  Generosity  \\\n0                         50.799999                      0.718114    0.167640   \n1                         51.200001                      0.678896    0.190099   \n2                         51.599998                      0.600127    0.120590   \n3                         51.919998                      0.495901    0.162427   \n4                         52.240002                      0.530935    0.236032   \n\n   Perceptions of corruption  Positive affect  Negative affect Code  \\\n0                   0.881686         0.517637         0.258195  AFG   \n1                   0.850035         0.583926         0.237092  AFG   \n2                   0.706766         0.618265         0.275324  AFG   \n3                   0.731109         0.611387         0.267175  AFG   \n4                   0.775620         0.710385         0.267919  AFG   \n\n   Peace_index  \n0        3.742  \n1        3.460  \n2        3.758  \n3        3.756  \n4        3.518  "},"exec_count":4,"output_type":"execute_result"}},"pos":9,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":5,"id":"541949","input":"master_file.describe(include='all').iloc[[0,1,2,3,4,6,10],[0,1,2,12]]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country</th>\n      <th>Year</th>\n      <th>Happiness_index</th>\n      <th>Peace_index</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>2556</td>\n      <td>2556.000000</td>\n      <td>1949.000000</td>\n      <td>2271.000000</td>\n    </tr>\n    <tr>\n      <th>unique</th>\n      <td>173</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>top</th>\n      <td>Saudi Arabia</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>freq</th>\n      <td>16</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>NaN</td>\n      <td>2013.793427</td>\n      <td>5.466707</td>\n      <td>5.865229</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>NaN</td>\n      <td>2005.000000</td>\n      <td>2.375092</td>\n      <td>2.704000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>NaN</td>\n      <td>2021.000000</td>\n      <td>8.018934</td>\n      <td>7.814000</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"             Country         Year  Happiness_index  Peace_index\ncount           2556  2556.000000      1949.000000  2271.000000\nunique           173          NaN              NaN          NaN\ntop     Saudi Arabia          NaN              NaN          NaN\nfreq              16          NaN              NaN          NaN\nmean             NaN  2013.793427         5.466707     5.865229\nmin              NaN  2005.000000         2.375092     2.704000\nmax              NaN  2021.000000         8.018934     7.814000"},"exec_count":5,"output_type":"execute_result"}},"pos":11,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":6,"id":"718a7a","input":"#Reading and Cleaning Female Head of State Data\n\nF_Head_of_State= pd.read_csv(\"female_heads_data//fem_head.csv\").rename(columns={'Start_Date':'Start_date','End_Date':'End_date'}) #Read CSV\n#Converting Dates to datetime format\nF_Head_of_State['Start_date']= pd.to_datetime(F_Head_of_State['Start_date'])\nF_Head_of_State['End_date']= pd.to_datetime(F_Head_of_State['End_date'])\n\n#Cleaning Female Head of State data\n\n#Rename country names to match the names in the master file\ndict2={'Ceylon':'Sri Lanka', 'Republic of Macedonia':'North Macedonia', 'Kyrgyzstan':'Kyrgyz Republic'}\n\nF_Head_of_State= F_Head_of_State.replace({'Country':dict2})\n\nF_Head_of_State.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Name</th>\n      <th>Country</th>\n      <th>Start_date</th>\n      <th>End_date</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Khertek Anchimaa-Toka</td>\n      <td>Tannu Tuva</td>\n      <td>1940-04-06</td>\n      <td>1944-10-11</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Sükhbaataryn Yanjmaa</td>\n      <td>Mongolia</td>\n      <td>1953-09-07</td>\n      <td>1954-07-07</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Sirimavo Bandaranaike</td>\n      <td>Sri Lanka</td>\n      <td>1960-07-21</td>\n      <td>1965-03-27</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Sirimavo Bandaranaike</td>\n      <td>Sri Lanka</td>\n      <td>1970-05-29</td>\n      <td>1977-07-23</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Indira Gandhi</td>\n      <td>India</td>\n      <td>1966-01-24</td>\n      <td>1977-04-24</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"                    Name     Country Start_date   End_date\n0  Khertek Anchimaa-Toka  Tannu Tuva 1940-04-06 1944-10-11\n1   Sükhbaataryn Yanjmaa    Mongolia 1953-09-07 1954-07-07\n2  Sirimavo Bandaranaike   Sri Lanka 1960-07-21 1965-03-27\n3  Sirimavo Bandaranaike   Sri Lanka 1970-05-29 1977-07-23\n4          Indira Gandhi       India 1966-01-24 1977-04-24"},"exec_count":6,"output_type":"execute_result"}},"pos":12,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":7,"id":"bbd805","input":"F_Head_of_State.describe(include='all',datetime_is_numeric=True).iloc[[0,1,2,3,5,9],:]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Name</th>\n      <th>Country</th>\n      <th>Start_date</th>\n      <th>End_date</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>162</td>\n      <td>162</td>\n      <td>162</td>\n      <td>162</td>\n    </tr>\n    <tr>\n      <th>unique</th>\n      <td>142</td>\n      <td>90</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>top</th>\n      <td>Gro Harlem Brundtland</td>\n      <td>Moldova</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>freq</th>\n      <td>3</td>\n      <td>5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1940-04-06 00:00:00</td>\n      <td>1944-10-11 00:00:00</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2022-01-27 00:00:00</td>\n      <td>2022-01-31 00:00:00</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"                         Name  Country           Start_date  \\\ncount                     162      162                  162   \nunique                    142       90                  NaN   \ntop     Gro Harlem Brundtland  Moldova                  NaN   \nfreq                        3        5                  NaN   \nmin                       NaN      NaN  1940-04-06 00:00:00   \nmax                       NaN      NaN  2022-01-27 00:00:00   \n\n                   End_date  \ncount                   162  \nunique                  NaN  \ntop                     NaN  \nfreq                    NaN  \nmin     1944-10-11 00:00:00  \nmax     2022-01-31 00:00:00  "},"exec_count":7,"output_type":"execute_result"}},"pos":14,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":8,"id":"e811e1","input":"#finding countries with less than 7 observations in the Happiness Index dataset \nHI_count=pd.DataFrame(df_happiness.groupby('Country')['Happiness_index'].count()).reset_index().rename(\n    columns={'Happiness_index':'HI_count'})  #Count of Countries \n\n#Merge count values in the original dataset and drop countries with less than 7 observations\ndf_happiness_2=pd.merge(df_happiness, HI_count, on='Country', how='outer')\ndf_happiness_2.drop(df_happiness_2.index[df_happiness_2['HI_count'] < 7], inplace=True) \n\n#Calculate average values for each country in the entire panel dataset\n#These values will be used for ranking\n\navg_index_HI= df_happiness_2.groupby([\"Country\"])[['Happiness_index']].mean() #Average of happiness\navg_index_PI=peace_index.groupby([\"Country\"])[['Peace_index']].mean() #Average of peace","pos":17,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":9,"id":"ac4d50","input":"def plot_trends(index,ax):\n\n    \"\"\"\n    This function takes in an index name and then plots the time trends for the top \n    and bottom 3 countries for the respective index.\n    \n    The function creates a copy of the relevant average dataset made earlier (avg_index_HI \n    for happiness and avg_index_PI for peace), sorts this data on the average index values, \n    and creates a list named countries which stores the names of the top and bottom 3 countries.\n\n    Lineplots for these countries are drawn using data from the master data file.\n    We use the seaborn library with the deep color palette.\n    \n    Paramters\n    ---------\n    index: string\n        The name of the relevant index (Happiness/Peace )for the trend\n    \n    ax: axes object\n        Empty axes on which we will plot the data\n        \n    Returns\n    -------\n    ax: axes object\n        The axes object updated with our plot\n    \"\"\"\n    \n    assert (index==\"Happiness\") | (index==\"Peace\")\n    \n    index_col= index+\"_index\"\n\n    if index==\"Happiness\":\n        df= avg_index_HI.copy()\n    else:\n        df= avg_index_PI.copy()\n    \n    df= df.sort_values(index_col,ascending=False)\n    top= df.head(3).index #Names of top 3 countries\n    bot= df.tail(3).index #Names of bottom 3 countries\n\n    countries=top.append(bot) #Names appended in a single list\n    \n    #Filter master file and only keep the subset of countries which belong in our list\n    d = master_file.loc[master_file['Country'].isin(countries),[index_col, 'Year', 'Country']].dropna()\n    \n    #Plot\n    sns.lineplot(\n        ax=ax,x=d['Year'],\n         y=d[index_col], \n         hue=d['Country'],  \n         dashes=False, lw=3, \n         palette=\"deep\",legend=False\n         )\n\n    #Set titles, labels and background color \n    ax.set_title(index+' Time Trend: High vs. Low Ranked Countries', loc='center', fontdict=def_font_title)\n    ax.set_xlabel('Year', fontdict=def_font)\n    ax.set_ylabel(index+' Index', fontdict=def_font)\n    fig.set_facecolor(background)\n  \n    return ax\n\n    ","pos":19,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"0fd213","input":"We create a master data file by merging the Peace and Hapiness Index dataframes on country and year. We keep values from both datasets","pos":8,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"1affdd","input":"Next using our full panel we use lineplots to plot for each year the average index values for female led countries\nand the average values for male led countries. We also include a lineplot for the full sample i.e the average index\nvalues of all countries. We plot seperately for happiness and peace","pos":44,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"28871f","input":"# ECON GA- 4003 Project Data Report\n\n# Country Level Analysis of Happiness and Peace\n\n\n### Authors: Syeda Naveera Fatima Rizvi and Suniya Raza","pos":0,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"28d503","input":"***Peace Index***\n\nThe code below plots the trend for the Peace Index using the plot_trends function defined earlier","pos":25,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"2b46f7","input":"## Does the Gender of the Head of State/Government matter?\n\nIn this section we analyze wether countries led by females tend to fare better than countries than countries led by males especially during the global pandemic year i.e 2020.\n\nWe first analyze data for the year 2020 and check wether female led countried tend to have higher avergaes for the\nhappiness and peace index. We also look at the LOG GDP per capita.\n\nIn the end we analyze the 2008-2020 time period as an extension.\n\nThe code below first identifies head of states who were in power during the year 2020. To do this we filter our\nfemale head of state on countries where the mandate of the female head started before the beginning of next year\ni.e Jan 01 2021 and ended after the end of last year i.e 31 Dec 2019. In other words, we keep observations \nwhere start date< 2021-01-01 and end date> 2019-12-31.\n\nWe then merge our dataset with the happiness and peace data, and create variables representing wether the head of\nstate was male or female.\n\nNext we calculate the mean values of Happiness and Peace Index (as well as LOG GDP per Capita) for each gender \ncategory and plot the averages for each group using a barchart. ","pos":39,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"3d8d93","input":"Scrapy has now created a csv named fem_head.csv inside the main scrapy project folder (name female_heads_data).\nThuis is the csv used for our analysis.","pos":63,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"3e9bd2","input":"\nWe describe the data below. We have a total of 2556 observations for 173 countries. Our data is from the years 2005-2021 (a total of 16 years).\nHowever for most of our analysis we restrict our years from 2008-2020 (12 years) as this is the time period for which we have data for both indices.\n\nThe minimum of Happiness Index is 2.37 (worst possible life) and the maximum is 8.02 (best possible life) with a mean of 5.47. \n\nThe minimum of Peace Index is 2.7 (least peaceful) and the maximum is 7.81 (most peacefil) with a mean of 5.86.","pos":10,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"40d6c9","input":"From the plots above, we see that female led countries have actually fared better than male led countries at all years. We see this for both the happiness and the peace index. However we also notice that the for both indices,\nthe line plots for female led countries are more volatile than those for male led countries.\n\nWe also see that the full sample is much closer to the male led countries line in both the plots. Thus it appears\nthat the full sample line is being weighed down by the relatively poor performance of male led countries.\n\nNext we then extend our analysis to focus on two subsets of the data for the relative indices; the top 10 countries\nand the bottom 10 countries. Then within each subset we see what proportion of the heads of states are females.\n\nIn other words, for each index we look at the top 10 countries. We then see what percentage of these countries were led by females. We then do the same for the bottom 10. We analyze each index seperately.","pos":46,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"433bcf","input":"The barchart above shows that female head of state representation has always been present in the Top 10 country\nfor each year. In other words there is no such year where this percentage was 0. Female representation has ranged\nfrom a minimum of 10% to a maximum of 70% (in the year 2020). The average value in the top 10 category\nfor this representation is around 30%\n\nFor the worst 10 category we see that for most years this representation was 0 and at maximum it has only been 20%\n\nWe see that for most years female representation in the top 10 outnumbers the representation in the worst 10.","pos":50,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"44497f","input":"## Correlations","pos":28,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"445834","input":"Healthy life expectancy at birth, social support and GDP per capita have a strong positive correlation with the happiness index. Factors such as generosity and freedom to make life choices do not have a strong correlation with the index. Peace index has a correlation of only 0.5 with the happiness index, implying that even though these indices move in the same direction as expected, the correlation is not strong. Factors which which correlate with the happiness scores, do not seem to have a strong correlaton with the peace index either. \n<break>\n    \n    \nWe examine in further detail factors which have the highest positive correlation with the happiness scores in the first 3 scatter plots below. As can be seen from the heatmap, these factors are Log GDP per Capita, Social Support and Healthy Life Expectancy at birth. In the end we also look at the relationship between the peace and the happiness index in the last scatter plot. In each scatter plot we plot a regression line to identify the trend.","pos":31,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"48953c","input":"We visualize the time trend of happiness index of the 3 countries with the highest average happiness index value as well as the 3 countries with the lowest average. The chart shows that as opposed to the top ranked countries, the happiness index trends of low ranked countries are more volatile. For top ranking countries, the happiness index approximately stays between 7.3 to 8, where as for low ranked countries the happiness index has greater variation; from around 2.5 to 4.8.\n\nThus the plot above shows that happier countries tend to have relatively stable index values across the years\n<break>\n    \n    \nWe also take a case in point and analyse the time trend of Afghanistan, the second worst ranked country in average happiness index values. We choose this country as its time trend appears to be the most volatile. The rise and fall in the happiness index values can be clearly linked to the events of the War on Terror and the civil and political unrest in the country:","pos":22,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"51c0c3","input":"The barchart above again shows that female head of state representation has always been present in the Top 10 countries\nfor each year for peace, ranging from a minimum of 10 to a maximum of 50 in 2019. I\n\nFor the worst 10 category we see that except for 2 years years this representation was 0 and even during these\ntwo years there was just 1 out of the 10 countries which were led by females (10% Representation)","pos":52,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"6e9c1a","input":"Scrapy has now created a spider file inside our project. It first created the folder for the project named as female_heads_data in our orginal current directory. This project folder will later also contain our csv data after we have crawled the webpage. The female_heads_data contains a subfolder with the same name i.e female_heads_data. This subfolder contains a folder named spiders which contains the fem_head spider file scrapy just created.\n\nYou can run the tree command in the terminal to locate this file\n\nWe will next edit this fem_head spider file in order to be able to crawl the data. As discussed above the final version of the file has already been created and can be viewed seperately. In order to explain the code inside it, we have copied its contents below for convenience. ","pos":59,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"7335a7","input":"### Time trends of Happiness and Peace Indices in High and Low Ranked Countries\n\nIn this section we identify the top three and worse three countries for each index and then visualize their trends across time. We do our analysis for each index seperately.\n\nTo identify the top and worse three countries for each index (Happiness or Peace), we rank countries based on the average value for the respective index. For each country, we calculate the average of the index across the entire time period. Once the relevant countries are identified, we then analyze the time trend for their index values in the original dataset.\n\nNote: For some countries in the happiness index dataset there was a lot of missing data. For a fair comparison in the happiness index analysis, we drop countries which had less than 7 observations for this index. We choose 7 as a criteria as this is the half of the total number of years in the happiness index dataset. The Peace index dataset did not suffer from this problem and so we don't drop countries from it.\n\n","pos":16,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"7e559b","input":"***SPIDER FILE***\n\nimport scrapy\n\nclass FemHeadSpider(scrapy.Spider):\n\n    name = 'fem_head' \n    allowed_domains = ['en.wikipedia.org/wiki/List_of_elected_and_appointed_female_heads_of_state_and_government']\n    start_urls = ['http://en.wikipedia.org/wiki/List_of_elected_and_appointed_female_heads_of_state_and_government']\n    \n    # Remove the slash at the end of the path in start_urls if it is still present. \n    # The \"/\" creates an error when scrapy tries to crawl the data\n\n    def parse(self, response):\n        \"\"\"\n        This function aims to extract the name, country, mandate start and mandate end date of each female head of state in the table on the \n        wikipedia page.\n\n        We first identify the tbody of the table and store it in a variable tab. We then exytract the rows of this table in the tr.\n        We exclude the first row as it doesnt contain any actual data.\n        Then we index over all the rows and for each row we extract the child td.\n    \n        The wikipedia data of our interest needs to be retrieved from 2 different children (\"a\" and \"span\") of this td child.\n\n        We store the text contents of \"a\" in a variable nam_count as these are the names of the head of the state and the country\n        We store the text content of \"span\" in a variable start_end as these are the mandate start and end dates\n\n        The wikipedia data is not consistent across all rows. The length of the a and span items and the position of their elements \n        varies with each row. \n        Eg. in some rows the start date is the first element of the span item and in some rows it is the second.\n        We noticed that the position of the relevant text varies with the length of the item and so we use this with if conditions\n        to fix the errors\n\n        Similarly for leaders with mutliple terms, the name and country is provided for the first term but it is missing in the successive \n        terms. \n        If the name and country are not missing then these variables are populated accordingly. If they are missing then the value from\n        the previous row is used. \n        They are only missing if they are a successive term, of a head with multiple terms, so using the previous value is valid\n\n        For head of states which are currently in power, we fix the end data as 31 Jan 2022. This is a date larger than all start dates\n        in our sample. This is just done to make analysis easier by giving date values to all entries. It doesn't affect our analysis\n        otherwise as we will be focusing on 2020 only\n\n        The if conditions take care of all these cleaning errors.\n\n        In the end we store our data in a dictionary named data and we then yield it\n        \"\"\"\n        tab= response.xpath('//*[@id=\"mw-content-text\"]/div[1]/table[3]/tbody')\n        rows= tab.xpath('.//tr')[1:]\n        for row in rows:\n            td= row.css(\"td\")\n            nam_count= td.css(\"a::text\").getall() #This contains the name of the state and its female head \n            start_end= td.css(\"span::text\").getall() #Start and End Dates of the head's position in power\n\n            #Cleaning\n            \n            #Extracting Name and Country\n            if len(nam_count)>=2:\n                name= nam_count[0]    \n                country= nam_count[1] \n            \n            #Extracting date entries based on each case\n            if len(start_end)==5:\n                start= start_end[1]\n                end= start_end[2]\n            if len(start_end)==4:\n                start= start_end[2]\n                end= start_end[3]\n            if len(start_end)==3:\n                start= start_end[1]\n                end= start_end[2]\n            if len(start_end)==2:\n                if len(start_end[0])>=4:\n                   start= start_end[0]\n                   end= start_end[1]\n                else:\n                   start= start_end[1]\n                   end= \"31-Jan-22\"       #31 Jan 22 entry as end date for heads currently in power\n            if len(start_end)==1:\n                start= start_end[0]\n                end= \"31-Jan-22\"\n            \n            \n            data={\n                \"Name\": name, \n                \"Country\":country, \n                \"Start_Date\":start,\n                \"End_Date\":end\n                }\n            yield data\n\n","pos":61,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"84716c","input":"The plots above show that we do see index values being clustred together based on geographical proximity.\n\nFor the global happiness index we see that the dark orange shades (representing high levels of happiness)\nare clustered in Western and Northen Europe and North America. Similarly we see that the darker greens (representing low levels of happiness) are clustred in southern and eastern africa and south asia). Central Asian countries mostly colored as yellow tend to have moderate happiness levels.\n\nSimilarly for the peace index we see that that Western and Northen Europe and North America are colored\naccording to deepert shades of turquoise (higher peace) and the deepest pink is clustered in Central Africa, Middle East and Asia.\n","pos":38,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"85aecd","input":"Once our spider file is ready, we can scrawl it by running the following command in the terminal\n\n***To Run in the Terminal***\n\nscrapy crawl fem_head -O fem_head.csv","pos":62,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"8c4235","input":"The barcharts above show that countries led by females do in fact tend to fare better. For both peace and happiness \nwe see that the avergaes are higher by 0.6 points for females than males\n\nWe explore wether this behavior is also similar for other factors such as the LOG GDP per Capita and we see that \nwhile female led countries tend to fare better in that category too, however the difference is much less now. \n\nThis motivates us to explore wether such gendered difference is also present in other years. Subsequently, we \nextend our anaysis to the entire time period from 2008-2020.\n\nWe first make a panel dataset by running the hos_analysis function defined above for each year from\n2008-2021 and the concatinating all datasets together. This gives us a full panel where for each year we can\nidentify which countries were led by females heads of states.","pos":42,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"8d4dc5","input":"# Conclusion","pos":54,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"8e7a5e","input":"In this analysis we observe multiple insights. Individual time trends for average values of both peace and happiness show that low ranked countries tend to exhibit more volatility than high ranked countries. We also look at the impact of major political events on the trend for the happiness score on Afghanistan. We notice that the happiness index appears to be quite strongly correlated with factors such as Log GDP per Capita, Healthy Life Expectancy at birth and Social Support. We see a positive, but moderate correlation between peace and happiness. We also notice that geographical proximity plays a role, as in world map for the year 2020, we see that magnitude levels of index values tend to be clustered together.\n\nIn the global pandemic year of 2020 we see that the average index levels for female led countries were higher than male led countries for both happiness and peace. We also see that in this year, 7 out of 10 (70%) of the Top 10 Countries for happiness were led by Females. We also see that in 2020, the percentage of head of states which were female attains its maximum value. In contrast only one out of 10 (10%) of the worst 10 countries in 2020 were led by females. For peace the percentage in the top 10 comes down to 40% for females, however, female led countries tend to be both more peaceful and happier.\n\n\n","pos":55,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"9a2996","input":"We download 3 main datasets for our analysis:\n\n1. Data for Peace Index. This is a Global Peace Index measuring the peacefulness of a country. This index orginally ranges from 1-5, where lower values represent more peacefullness in a country. We have downloaded this dataset from the [vision of humanity](https://www.visionofhumanity.org/) website. The downloaded dataset is provided as a supplemnatry file in this project and we simply read this file for our analysis <br> <br>\n***Key Variables: Year, Country, Peace_index*** <br> <br>\nThis data has been produced by the Institute for Economics and Peace (IEP) under the guidance of an international panel of independent experts.  <br> <br>\nNote: To make the peace index consistent with the happier index for easier analysis, we transform the peace index data such that it ranges on a 1-10 scale with higher index values now representing higher peacefullness.<br> <br>\n\n2.  Data for Happiness Index. This is a Cantril ladder Score which is meant to represent happiness or subjective well-being. Respondents are asked to imagine a ladder with steps numbered from 0 to 10. They are then asked to rate their current lives based on where they consider themselves to stand on the ladder, with step 0 is the worst possible life and step 10 is the best one. We download the data for the happiness index using an API request from the [World Happiness Report](https://worldhappiness.report/ed/2021/) published in the year 2021. <br> <br> \n***Key Variables: Year, Country, Life Ladder (Happiness index)*** <br> <br>\nOther than the happinesss index, we also have data for the  six factors which are supposed to contribute to the level of happiness. <br> <br>\nThese are: <br> \n    -Log GDP per Capita <br>\n    -Healthy life expectancy <br>\n    -Social Support <br>\n    -Freedom to make Life Choices. <br>\n    -Generosity <br>\n    -Perception of Corruption <br><br>\nFull details on the variables can be found in this [appendix](https://happiness-report.s3.amazonaws.com/2021/Appendix1WHR2021C2.pdf) <br><br>\nThe World Happiness Report is a publication of the Sustainable Development Solutions Network, powered by data from the Gallup World poll and Lloyd’s Register Foundation, who provided access to the World Risk Poll. The 2021 Report includes data from the ICL-YouGov Behaviour Tracker as part of the COVID Data Hub from theInstitute of Global Health Innovation <br> <br>\n\n3. Data for Female Head of States. This data lists female head of states and government who were appointed by a governing committee or parliament. It includes Presidents, Prime Ministers and Chancellors. The dataset includes the name of the countries these women mandated on as well as the start and end dates of the mandate. We scrape this data using scrapy from the Wikipedia page for [List of elected and appointed female heads of state and government](https://en.wikipedia.org/wiki/List_of_elected_and_appointed_female_heads_of_state_and_government). <br> \nWe have already scraped the data and we provide it as csv in the zip folder containing this project. We also provide the spider python file used to crawl the data. <br> <br>\nInisde this zip folder there is a folder named female_heads_data. Inside it there is csv named fem_head. This csv contains our data and we simply read this file for our analysis. The folder additionally has a subfolder also named as female_head_data. This subfolder contains a folder named spiders which contains a python source file named fem_head. This is the spider file we used to crawl the data. <br><br>\nThe steps required to create this spider file, crawl the webpage and store the data in the csv are are provided in the Appendix at the end of this report.<br> <br>\n***Key Variables: Female Head of State Name (Name), Country Name (Country), LMandate Start Date, Mandate End Dateife Ladder (Happiness index)*** <br> <br>\n\nThe code below reads and cleans the data for our analysis","pos":4,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"9dcd81","input":"","pos":64,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"a0c92a","input":"The code below defines a function named plot_trends which we will use to plot our trends``","pos":18,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"ac9d7a","input":"We now analyze wether there is a relationship between index values and geographical proximity i.e countries geographically close to each other tend to have similar index values.\n\nFor this we plot a Choropleth using Plotly. This is an interactive world map in which each country is colored \naccording to a colorscale representing the respective index values. Hovering over the map displays the name of \nthe country and the index value. We make seperate plots for happiness and peace\n\nFor happiness the countries are colored according to the tropic color scheme, as per which countries\nwith higher index values are colored on the turquoise scale (higher the magnitude, darker the turquois) and countries with lower values are colored on the pink scale (lower the values deeper the pink).\n\nFor happiness the countries are colored according to the fall color scheme, where the colorscale starts from dark green for the lowest index values, then lightens as the index increases and then becomes orange for the higher values (highest values are the deepest orange).\n\nWe plot the map for the index values in 2020.","pos":35,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"b3bc0d","input":"We examine how factors such as Log GDP per Capita, Social Support, Healthy Life Expectancy at birth, degree of autonomy (Freedom to make life choices) and level of Generosity in the country correlate with the happiness index. We also analyze the correlation between the peace index and the happiness index. The following correlation matrix show how weakly or strongly  the variables correlate with each other:","pos":29,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"c111f5","input":"***Happiness Index***\n\nThe code below plots the trend for the Happiness Index","pos":20,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"c11ed6","input":"In this project we analyze the general happiness level and peace values of countries around the world. We analyze the time trends of the average \nvalues of this indices for both the top and worse performing countries. We do a special focus on Afghanistan where we see how major political events\nhave impacted the happiness index values for this country. We also analyze the correlation between the happiness index and factors such as \nhealthy life expectancy, log gdp per capita, social support, freedom to make life choices and perception of corruption. Finally we look at how geographical proximity plays a role on index values. \n\nA significant step in this project aims to see see whether countries who have a female head of state fare better on these indices than male led countries.\nFollowing reports of how female-led countries such as New Zealand (Jacinda Ardern) and Germany (Angela Merkel) had a superior performance during\nthe pandemic, we first focus on the year 2020. We see wether averages of the index values (both peace and happiness) differed by the gender of the head of state. We then extend our analysis to the entire 2008-2020 time period and check wether these differences have persisted across time.\nWe also see what percentage of head of states were female in both the top and worst 10 countries (for peace and happiness seperately) in each year.\n\nThis report finds that there are infact gendered differences and female-led countries performed well not only during the pandemic year but also throughout the 2008-2020 time period.","pos":2,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"c6cf30","input":"***To Run in the Terminal***\n\ncd \"..........\\Data for Social Skills\\Project\" \n\nscrapy startproject female_heads_data\n\ncd female_heads_data\n\nscrapy genspider fem_head en.wikipedia.org/wiki/List_of_elected_and_appointed_female_heads_of_state_and_government","pos":58,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"c9e01a","input":"## Getting the data","pos":3,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"d10951","input":"In the chart above we clearly see how major political events have impacted the happiness index values for Afghanistan. Foloowing disressfull events such as\n***Increase in Military Operations*** in 2010 and ***Clash between Taliban and the Afghan Government*** in 2016 we see a dip in the happiness index for the country. On the other hand, stablilizing events such as the ***End of war on Terror*** in 2014 have resulted in a rise in the index values.","pos":24,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"d2aa5c","input":"## Graphics","pos":15,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"d366a6","input":"***Geographic Map***","pos":34,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"d380bb","input":"# Appendix","pos":56,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"d3c5c2","input":"Hence from the analysis above it shows that female heads of states tend to be very heavily represented in the \ntop 10 categories for both happiness and peace. Whereas the worse 10 countries tend to be mainly led by males","pos":53,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"d58b63","input":"The scatterplots above show the strong positive correlation of the Happiness Index with the Log GDP per Capita,\nHealthy life expectancy at birth and Social Support.\n\nAs for peace and happiness, we can see from the last scatter plot that the relationship between the two indices,\nwhile positive, is not very definite and strong.","pos":33,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"def7d3","input":"The code below creates interactive barcharts to display the results from the function above for a particular index.\nOn the x-axis we have years and the y-axis we have the percentage of heads of states which are females.\nWe have seperate bars for Top 10 and Worst 10 countries in each year. We analyze peace and happiness sepereately\n\nThe bar chart also shows horizonatal lines for the min, mean and max of percentage of heads of states which are\nfemales in the Top 10 Countries category. Hoevering over each bar displays the country and head of state names for\nfemale led countries","pos":48,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e05700","input":"Inside the spider file we first need to remove the slash \"/\" at the end of the path in the start_urls. This slash creates an error when scrapy tried to \ncrawl the webapge and so must be removed.\n\nNext we add our codes inside the parse function. Full details and description of the code are described inside the\ndocstring of this function.","pos":60,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e62d7c","input":"## Introduction","pos":1,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"f16330","input":"We describe this data below. Our data list 142 unique female head of states from 90 unique countries.\n\nLithuania has had 5 terms with female head of states making it the state with the highest number of terms with a  \nfemale head in our Data.\n\nGro Harlem Brundtland from Norway has had the most terms in office i.e 3.\n\nNote: The end date of 2022-01-31 was just a future value we assigned to heads of states who were still in power. This was done in the scrapy file we\nused to scrape the data\n","pos":13,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"f27038","input":"In this section we describe the process of scraping our data for the female heads of state.\n\nWe first need to run the following lines of code in the terminal\n\n    1. Set the current directory to where you want your scrapy project\n\n    You should change the path in front of cd with the path for your own directory\n\n    2. Run the command scrapy startproject <insert name>\n\n    For our code we name the project female_heads_data. This creates a folder named as female_heads_data in our current directory\n\n    3. Set the project folder as your current directory\n\n    4. Run the command scrapy genspider <insert spider file name> <insert the webpage link>\n\n    For our code we name the spider file as fem_head and insert the link to the Wikipedia webpage","pos":57,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"f87996","input":"We analyse the time trends of the top 3 countries with the best average peace index and 3 countries with the worst average. The peace index values of the bottom 3 countries still exhibis more volatility than the top 3 countries, however its not as much as it was for the happiness index.  The index ranges from around 2.7 to 3.8 for the bottom 3. For the top ranked countries, it vares even less (from around 7.4 to 7.6).\n\nThe plot above shows that Iceland has persistently maintained the highest peace index value since 2008. ","pos":27,"state":"done","type":"cell"}
{"id":0,"time":1662072011242,"type":"user"}
{"last_load":1662064440703,"type":"file"}